[{"filename":"country-db.js","title":"getScores(userId)","query":"set @email = ${con.escape(userId)};\r\n\tcreate temporary table myscorecards\r\n\tselect \r\n\t\tg.game_id,\r\n\t\tconcat(t0.category,' ',t0.gender,' - ',t0.sport) as tournament, \r\n\t\tdate_format(g.date, '%W, %m/%d') as date, \r\n\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\tg.location,\r\n\t\tconcat(t1.country, ' ', t1.number) as short1,\r\n\t\tconcat(t2.country,' ' , t2.number) as short2,\r\n\t\tt1.country as flag1,\r\n\t\tt2.country as flag2,\r\n\t\tconcat(s.score1,' - ',s.score2) as score, \r\n\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\tconcat(ss.team1_set1,' - ',ss.team2_set1) as set1,\r\n\t\tconcat(ss.team1_set2,' - ',ss.team2_set2) as set2,\r\n\t\tconcat(ss.team1_set3,' - ',ss.team2_set3) as set3,\r\n\t\tt0.sport,\r\n\t\tg.type,\r\n\t\tif(current_timestamp < date_add(timestamp(g.date,g.time),interval 3 hour),TRUE,FALSE) as showReport,\r\n\t\tt0.tournament_id,\r\n\t\tmytm.team_id\r\n\tfrom sign as s\r\n\tjoin game as g on s.game_id = g.game_id\r\n\tjoin tournament as t0 on g.tournament_id = t0.tournament_id\r\n\tjoin team as t1 on g.team1_id = t1.team_id \r\n\tjoin team as t2 on g.team2_id = t2.team_id\r\n\tjoin captain as c on t1.country = c.country or t2.country = c.country\r\n\tjoin team as mytm on (t1.team_id=mytm.team_id or t2.team_id=mytm.team_id) and mytm.country = c.country\r\n\tleft join setscore as ss on g.game_id = ss.game_id\r\n\twhere c.username = @email\r\n\torder by mytm.team_id asc, g.date desc, g.time desc;\r\n\tcreate temporary table myscorerows\r\n\tselect \r\n\t\tdistinct msc.team_id, \r\n\t\tconcat(t.category,' ',t.gender) as cc_key, \r\n\t\tconcat(t.country,' ',t.number) as short,\r\n\t\tconcat(t.country,t.number) as shirt,\r\n\t\tcc.bold,\r\n\t\tcc.background,\r\n\t\tcc.text\r\n\tfrom myscorecards as msc\r\n\tjoin team as t on msc.team_id = t.team_id\r\n\tjoin colorchart as cc on concat(t.category,' ',t.gender) = cc.category;\r\n\tselect * from myscorecards;\r\n\tselect * from myscorerows;\r\n\tdrop table myscorecards;\r\n\tdrop table myscorerows;"},{"filename":"discipline-db.js","title":"getPenaltyEmailInfo(gameId)","query":"select concat(t1.country,' ',t1.number) as team1, concat(t2.country,' ',t2.number) as team2, g.location, date_format(date,'%a, %b-%d') as date, time_format(CONVERT_TZ(g.time, 'UTC', 'America/New_York'),'%l:%i %p' ) as time from game as g\r\n\tjoin team as t1 on g.team1_id = t1.team_id\r\n\tjoin team as t2 on g.team2_id = t2.team_id\r\n\twhere game_id = ${con.escape(gameId)}"},{"filename":"discipline-db.js","title":"sendCardPenalty(color, name,gameID, teamID, description, username)","query":"insert into card values(0,${con.escape(color)},${con.escape(name)},${con.escape(gameID)},${con.escape(teamID)},${con.escape(description)},${con.escape(username)},current_timestamp)"},{"filename":"discipline-db.js","title":"getBadCommentsDB()","query":"select distinct\r\n\t\t\t\t\t\tbc.comment_id as commentID, \r\n    \t\t\t\t\tp.post, \r\n\t\t\t\t\t\tc.comment, \r\n\t\t\t\t\t\tbc.status,\r\n\t\t\t\t\t\tbadwords as flaggedWords, \r\n\t\t\t\t\t\tconcat(u.first_name,' ',u.last_name,': ',date_format(c.time_stamp,'%e-%b @ %l:%i %p')) as commentAuthorInfo \r\n\t\t\t\t\tfrom badcomments as bc\r\n\t\t\t\t\tjoin comment as c on bc.comment_id = c.comment_id\r\n\t\t\t\t\tjoin post as p on c.social_hash_id = p.social_hash_id\r\n\t\t\t\t\tjoin user as u on p.poster_username = u.username\r\n\t\t\t\t\twhere status in ('PENDING','SUMMONED')\r\n\t\t\t\t\torder by bc.status, c.time_stamp desc;"},{"filename":"discipline-db.js","title":"updateCommentStatusDB(status, comment_id)","query":"update badcomments\r\n\t\t\t\t\tset status = ${con.escape(status)}\r\n\t\t\t\t\twhere comment_id = ${con.escape(comment_id)}"},{"filename":"discipline-db.js","title":"summonUser(comment_id, message, adminUsernames)","query":"\r\n\t\tstart transaction;\r\n\t\tSET@username = (select poster_username from comment where comment_id=${con.escape(comment_id)});\r\n\t\tinsert into team values(0, 'Internal', 'Private Message', 'INT', '', '');\r\n\t\tSET@dmteamid = (SELECT LAST_INSERT_ID());\r\n\t\tinsert into subscribe values(@username, @dmteamid);\r\n\t\tinsert into subscribe values\r\n\t\t\t${adminSubscribeValues};\r\n\t\tinsert into post values(\r\n\t\t\t0, \r\n\t\t\t${con.escape(messageTitle)},\r\n\t\t\t${con.escape(message)},\r\n\t\t\t@dmteamid,\r\n\t\t\t'5daa0c58-655e-42f6-a316-842520624c22',\r\n\t\t\tcurrent_timestamp,\r\n\t\t\tsha1(concat(${con.escape(messageTitle)}, ${con.escape(message)},current_timestamp)),\r\n\t\t\t0\r\n\t\t);\r\n\t\tselect\r\n\t\t\t@dmteamid as teamid,\r\n\t\t\tconcat(first_name, ' ', last_name) as name\r\n\t\t\tfrom user where username=@username;\r\n\t\tcommit;\r\n\t"},{"filename":"discipline-db.js","title":"getCards()","query":"\r\n\t\tselect \r\n\t\t\tr.registrant_id,\r\n\t\t\tconcat(r.firstname,' ',r.lastname) as name, \r\n\t\t\tif(color=1,'Red','Yellow') as card_color,\r\n\t\t\tdescription,\r\n\t\t\ttimestamp,\r\n\t\t\tsummary.red,\r\n\t\t\tsummary.yellow\r\n\t\tfrom card as c\r\n\t\tjoin registrants as r using(registrant_id)\r\n\t\tjoin (select \r\n\t\t\tregistrant_id, \r\n\t\t\tsum(case when c.color = 1 then 1 else 0 end) as Red,\r\n\t\t\tsum(case when c.color = 0 then 1 else 0 end) as Yellow\r\n\t\tfrom card as c\r\n\t\tgroup by registrant_id) as summary using(registrant_id)\r\n\t\torder by timestamp desc\r\n\t"},{"filename":"game-db.js","title":"searchGamesById(value)","query":"select distinct game_id, t0.tournament_id, t0.sport,\r\n\t\tsp.forfeit_score as forfeit, g.type, status, date_format(g.date,'%a, %b-%d') as date, if(p.pool = 'Pool 0', '', p.pool) as pool, time_format(g.time,'%l:%i %p') as time,\r\n\t\tlocation, team1_id, team2_id,  t1.country as country1, t1.number as number1,\r\n\t\tt2.country as country2, t2.number as number2, t1.category,\r\n\t\tt1.gender from game as g\r\n\t\tjoin team as t1 on t1.team_id = g.team1_id\r\n\t\tjoin team as t2 on t2.team_id = g.team2_id\r\n\t\tjoin tournament as t0 on t0.tournament_id= g.tournament_id\r\n\t\tleft join pool as p on p.team_id=t1.team_id\r\n\t\tjoin sport as sp on t0.sport=sp.sport\r\n\t\twhere status = 'PENDING' and game_id = ${con.escape(value)} and p.tournament_id=t0.tournament_id\r\n        order by g.date asc, g.time asc"},{"filename":"game-db.js","title":"searchGamesByLocation(value)","query":"select distinct game_id, t0.tournament_id, t0.sport,\r\n\t\tsp.forfeit_score as forfeit, g.type, status, date_format(g.date,'%a, %b-%d') as date, if(p.pool = 'Pool 0', '', p.pool) as pool, time_format(g.time,'%l:%i %p') as time,\r\n\t\tlocation, team1_id, team2_id,  t1.country as country1, t1.number as number1,\r\n\t\tt2.country as country2, t2.number as number2, t1.category,\r\n\t\tt1.gender from game as g\r\n\t\tjoin team as t1 on t1.team_id = g.team1_id\r\n\t\tjoin team as t2 on t2.team_id = g.team2_id\r\n\t\tjoin tournament as t0 on t0.tournament_id= g.tournament_id\r\n\t\tleft join pool as p on p.team_id=t1.team_id\r\n\t\tjoin sport as sp on t0.sport=sp.sport\r\n\t\twhere status = 'PENDING' and g.location = ${con.escape(value)} and p.tournament_id=t0.tournament_id\r\n\t\torder by g.date asc, g.time asc"},{"filename":"game-db.js","title":"insertScore(body, userId)","query":"replace into sign (game_id, score1, score2, coach1, coach2, site_director, referee, timestamp) values(${con.escape(body.game_id)}, ${con.escape(body.team1Score)},${con.escape(body.team2Score)}, ${con.escape(body.coach1)}, ${con.escape(body.coach2)} , ${con.escape(userId)}, ${con.escape(body.referee)}, now());"},{"filename":"game-db.js","title":"insertRating(team_id, game_id, team_rating)","query":"INSERT INTO sportsmanship (game_id, team_id, team_rating) VALUES (${con.escape(game_id)}, ${con.escape(team_id)}, ${con.escape(team_rating)});"},{"filename":"game-db.js","title":"setGameToComplete(gameId)","query":"update gameoptions\r\n    join scheduleoptions using(schedule_key) \r\n    set status = 'COMPLETED'\r\n    where published = 1 and game_id = ${con.escape(gameId)};"},{"filename":"game-db.js","title":"retrieveRating()","query":"select t.country, number, avg(team_rating) as rating, count(*) as ratingCount from sportsmanship as sp\r\n\tjoin team as t on t.team_id = sp.team_id\r\n\tgroup by country"},{"filename":"game-db.js","title":"getMyScores(userId)","query":"\r\n\tselect\r\n\t\tg.game_id,\r\n\t\tconcat(t0.category,' ',t0.gender,' - ',t0.sport) as tournament,\r\n\t\tdate_format(g.date, '%W, %m/%d') as date,\r\n\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\tg.location,\r\n\t\tconcat(t1.country, ' ', t1.number) as short1,\r\n\t\tconcat(t2.country,' ' , t2.number) as short2,\r\n\t\tt1.country as flag1,\r\n\t\tt2.country as flag2,\r\n\t\tconcat(s.score1,' - ',s.score2) as score,\r\n\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\tconcat(ss.team1_set1,' - ',ss.team2_set1) as set1,\r\n\t\tconcat(ss.team1_set2,' - ',ss.team2_set2) as set2,\r\n\t\tconcat(ss.team1_set3,' - ',ss.team2_set3) as set3,\r\n\t\tt0.sport,\r\n\t\tg.type,\r\n\t\tif(current_timestamp <= date_add(s.timestamp,interval 2 hour) and scr.game_id is null and scl.game_id is null,TRUE,FALSE) as showReport,\r\n\t\tt0.tournament_id,\r\n\t\tmytm.team_id\r\n\tfrom sign as s\r\n\tjoin game as g on s.game_id = g.game_id\r\n\tjoin tournament as t0 on g.tournament_id = t0.tournament_id\r\n\tjoin team as t1 on g.team1_id = t1.team_id\r\n\tjoin team as t2 on g.team2_id = t2.team_id\r\n\tjoin subscribe as sub on t1.team_id = sub.team_id or t2.team_id = sub.team_id\r\n\tjoin team as mytm on sub.team_id=mytm.team_id\r\n\tleft join setscore as ss on g.game_id = ss.game_id\r\n\tleft join scorechangerequest as scr on g.game_id = scr.game_id and scr.username = ${con.escape(userId)}\r\n\tleft join scorechangelog as scl on g.game_id = scl.game_id\r\n\twhere sub.username = ${con.escape(userId)}\r\n\torder by g.date desc, g.time desc;\r\n\t"},{"filename":"game-db.js","title":"getMasterStandingsScores()","query":"\r\n\t\tcreate temporary table scorecards\r\n\t\tselect \r\n\t\t\tdate_format(g.date, '%W, %m/%d') as date, \r\n\t\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\t\tg.location,\r\n\t\t\tg.tournament_id,\r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament,\r\n\t\t\tif(st.pool = 'Pool 0', '', st.pool) as pool,\r\n\t\t\tt.sport,\r\n\t\t\tg.type,\r\n\t\t\tg.game_id,\r\n\t\t\tif(abs(s.score1 - s.score2) > sp.rachmanus_max_pd, 1, 0) as rachmanus_flag,\r\n\t\t\tsp.rachmanus_max_pd,\r\n\t\t\tconcat(t1.country,' ',t1.number) as team1,\r\n\t\t\tconcat(t2.country,' ',t2.number) as team2,\r\n\t\t\tt1.country as flag1,\r\n\t\t\tt2.country as flag2,\r\n\t\t\ts.score1,\r\n\t\t\ts.score2,\r\n\t\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\t\tss.team1_set1,\r\n\t\t\tss.team2_set1,\r\n\t\t\tss.team1_set2,\r\n\t\t\tss.team2_set2,\r\n\t\t\tss.team1_set3,\r\n\t\t\tss.team2_set3,\r\n\t\t\tconcat(s.coach1, ' - ', s.coach2) as coaches\r\n\t\tfrom sign as s\r\n\t\tjoin game as g on s.game_id = g.game_id\r\n\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\tjoin sport as sp on t.sport = sp.sport\r\n\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\tjoin standings as st on g.tournament_id = st.tournament_id and g.team1_id = st.team_id\r\n\t\tleft join setscore as ss on s.game_id = ss.game_id\r\n\t\torder by g.date desc, g.time desc, g.location;\r\n\t\tselect * from scorecards;\r\n\t\tdrop table scorecards;"},{"filename":"game-db.js","title":"getMyStandingsScores(userId)","query":"\r\n\t\tset @userId = ${con.escape(userId)};\r\n\t\tcreate temporary table mytournaments\r\n\t\tselect distinct\r\n\t\t\tt.tournament_id,\r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament\r\n\t\tfrom tournament as t\r\n\t\tjoin pool as p on t.tournament_id = p.tournament_id\r\n\t\tjoin sport as sp on t.sport = sp.sport\r\n\t\tjoin subscribe as s on p.team_id = s.team_id\r\n\t\twhere\r\n\t\t\tsp.forfeit_score <> 0 and s.username = @userId\r\n\t\torder by tournament;\r\n\t\tcreate temporary table myscorecards\r\n\t\tselect distinct\r\n\t\t\tdate_format(g.date, '%W, %m/%d') as date,\r\n\t\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\t\tg.location,\r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament,\r\n\t\t\tif(st.pool = 'Pool 0', '', st.pool) as pool,\r\n\t\t\tt.sport,\r\n\t\t\tg.type,\r\n\t\t\tg.game_id,\r\n\t\t\tg.tournament_id,\r\n\t\t\tif(abs(s.score1 - s.score2) > sp.rachmanus_max_pd, 1, 0) as rachmanus_flag,\r\n\t\t\tsp.rachmanus_max_pd,\r\n\t\t\tconcat(t1.country,' ',t1.number) as team1,\r\n\t\t\tconcat(t2.country,' ',t2.number) as team2,\r\n\t\t\tt1.country as flag1,\r\n\t\t\tt2.country as flag2,\r\n\t\t\ts.score1,\r\n\t\t\ts.score2,\r\n\t\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\t\tss.team1_set1,\r\n\t\t\tss.team2_set1,\r\n\t\t\tss.team1_set2,\r\n\t\t\tss.team2_set2,\r\n\t\t\tss.team1_set3,\r\n\t\t\tss.team2_set3\r\n\t\tfrom sign as s\r\n\t\tjoin game as g on s.game_id = g.game_id\r\n\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\tjoin sport as sp on t.sport = sp.sport\r\n\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\tleft join setscore as ss on s.game_id = ss.game_id\r\n\t\tjoin mytournaments as mt on g.tournament_id = mt.tournament_id\r\n\t\tjoin standings as st on g.tournament_id = st.tournament_id and g.team1_id = st.team_id\r\n\t\torder by g.date desc, g.time desc, g.location;\r\n\t\tselect * from myscorecards;\r\n\t\tdrop table mytournaments;\r\n\t\tdrop table myscorecards;"},{"filename":"game-db.js","title":"getGameTypeFromGameId(gameId)","query":"select type from game where game_id = ${con.escape(gameId)}"},{"filename":"game-db.js","title":"postUnassigned(body)","query":"insert into game values(0,${con.escape(body.tournamentId)},'PENDING',${con.escape(body.newDate)},${con.escape(body.newTime)},${con.escape(body.newLocation)},NULL,NULL,${con.escape(body.gameType)})"},{"filename":"game-db.js","title":"postTournament(body)","query":"insert into game values(0,${con.escape(body.tournamentId)},'TOURNAMENT',${con.escape(body.newDate)},${con.escape(body.newTime)},${con.escape(body.newLocation)},NULL,NULL,${con.escape(body.gameType)})"},{"filename":"game-db.js","title":"getTeamsFromGame(gameid)","query":"select t1.team_id as team1Id, t2.team_id as team2Id, g.date, g.time, concat(t.category,' ',t.gender,' - ',t.sport) as tournament, concat(t1.country,' ', t1.number) as team1, concat(t2.country,' ', t2.number) as team2 from tournament as t\r\n\t\t\t\t\t\t\t\tjoin game as g on t.tournament_id = g.tournament_id\r\n\t\t\t\t\t\t\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\t\t\t\t\t\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(gameid)}"},{"filename":"game-db.js","title":"getCategoryFromGameId(gameId)","query":"select t.category, t.gender, t.sport, concat(t.category,' ',t.gender,' - ',t.sport) as tournament from game as g\r\n\t\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\t\twhere g.game_id = ${con.escape(gameId)}"},{"filename":"game-db.js","title":"deleteGameBroadcast(body, gameType)","query":"insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},t.team_id,'0cd6e8a4-a449-4800-a361-d59028c0e23c',current_timestamp, sha1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},current_timestamp)), 1  from team as t\r\n\t\t\t\t\t\t\t\tjoin game as g on g.team1_id = t.team_id\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(body.gameId)}\r\n\t\t\t\t\t\t\t\tUNION\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},t.team_id,'5daa0c58-655e-42f6-a316-842520624c22',CURRENT_TIMESTAMP, sha1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},current_timestamp)), 1 from team as t\r\n\t\t\t\t\t\t\t\tjoin game as g on g.team2_id = t.team_id\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(body.gameId)};"},{"filename":"game-db.js","title":"getTourneyAndTeamNamesFromGameID(gameId)","query":"select concat(t0.category,' ',t0.gender,' - ',t0.sport) as tournament, concat(t1.country,' ',t1.number) as team1Name, concat(t2.country,' ',t2.number) as team2Name from game as g\r\n\t\t\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\t\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\t\t\tjoin tournament as t0 on g.tournament_id = t0.tournament_id\r\n\t\t\t\twhere game_id = ${con.escape(gameId)}"},{"filename":"game-db.js","title":"updateGame(body)","query":"update game as g\r\n\t\t\t\t\t\t\t\tset g.date = ${con.escape(body.newDate)}, g.time = ${con.escape(body.newTime)},\r\n\t\t\t\t\t\t\t\tg.location = ${con.escape(body.newLocation)}\r\n\t\t\t\t\t\t\t\twhere game_id = ${con.escape(body.gameId)}"},{"filename":"game-db.js","title":"postGameChange(body)","query":"insert into gamechange values (0, ${con.escape(body.gameId)}, \r\n\t\t\t\t\t\t\t\t${con.escape(body.date)}, ${con.escape(body.time)}, ${con.escape(body.location)},\r\n\t\t\t\t\t\t\t\t${con.escape(body.newDate)}, ${con.escape(body.newTime)}, \r\n\t\t\t\t\t\t\t\t${con.escape(body.newLocation)}, current_timestamp, ${con.escape(body.reason)}, ${con.escape(body.change_type)});"},{"filename":"game-db.js","title":"removeGame(id)","query":"update game\r\n\t\t\t\t\tset status = 'DELETED'\r\n\t\t\t\t\twhere game_id=${con.escape(id)}"},{"filename":"game-db.js","title":"preAcceptScoreChange(body)","query":"\r\n\t\tselect\r\n\t\t\tt.tournament_id,\r\n\t\t\tp.pool,\r\n\t\t\tt1.team_id as team1_id,\r\n\t\t\tt2.team_id as team2_id,\r\n\t\t\tconcat(\r\n\t\t\t'The score of the ',\r\n\t\t\tt.category, \r\n\t\t\t' ',\r\n\t\t\tt.gender, \r\n\t\t\t' ',\r\n\t\t\tt.sport, \r\n\t\t\t' game between ',\r\n\t\t\tt1.category, \r\n\t\t\t' ',\r\n\t\t\tt1.gender, \r\n\t\t\t' ',\r\n\t\t\tt1.country, \r\n\t\t\tt1.number, \r\n\t\t\t' and ',\r\n\t\t\tt2.category, \r\n\t\t\t' ',\r\n\t\t\tt2.gender, \r\n\t\t\t' ',\r\n\t\t\tt2.country, \r\n\t\t\tt2.number, \r\n\t\t\t' on ',\r\n\t\t\tdate_format(g.date, '%W, %m/%d'),\r\n\t\t\t' @ ',\r\n\t\t\tdate_format(g.time, '%h:%i %p'),\r\n\t\t\t' was changed to ${con.escape(body.score1)}-${con.escape(body.score2)}'\r\n\t\t\t) as content\r\n\t\tfrom game as g\r\n\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\tjoin pool as p on t.tournament_id = p.tournament_id and g.team1_id = p.team_id\r\n\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\twhere game_id = ${con.escape(body.gameId)};\r\n\t"},{"filename":"game-db.js","title":"scoreChangeRequestCheck(game_id, score1, score2)","query":"select count(*) from scorechangerequest\r\n\t\t\t\t\twhere game_id = ${con.escape(game_id)} and score1 = ${con.escape(score1)} and score2 = ${con.escape(score2)} "},{"filename":"game-db.js","title":"newScoreChangeRequest(game_id, score1, score2, username)","query":" \r\n\tINSERT INTO scorechangerequest (game_id, score1, score2, username, status) VALUES (${con.escape(game_id)}, ${con.escape(score1)}, ${con.escape(score2)}, ${con.escape(username)}, 'Pending Decision');\r\n"},{"filename":"game-db.js","title":"newScoreChangeRequestVB(game_id, set, username)","query":" \r\n\tINSERT INTO scorechangerequest (game_id, score1, score2, team1_set1, team2_set1, team1_set2, team2_set2, team1_set3, team2_set3, username, status) VALUES (${con.escape(game_id)}, ${con.escape(set.score1)}, ${con.escape(set.score2)}, ${con.escape(set.team1_set1)}, ${con.escape(set.team2_set1)}, ${con.escape(set.team1_set2)}, ${con.escape(set.team2_set2)}, ${con.escape(set.team1_set3)}, ${con.escape(set.team2_set3)}, ${con.escape(username)}, 'Pending Decision');\r\n"},{"filename":"game-db.js","title":"getMasterScores()","query":"select date_format(g.date,'%a, %b-%d') as date, time_format(g.time,'%l:%i %p') as time, g.game_id as gameId, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type = 'Round - 1', '', concat(' ',g.type))) as tournament, t.sport, g.location, concat(t1.country,' ',t1.number) as team1, concat(t2.country,' ',t2.number) as team2, s.score1, s.score2, s.coach1, s.coach2, s.referee from sign as s\r\n\t\t\t\t\t\t\t\tjoin game as g on s.game_id=g.game_id\r\n\t\t\t\t\t\t\t\tjoin team as t1 on g.team1_id=t1.team_id\r\n\t\t\t\t\t\t\t\tjoin team as t2 on g.team2_id=t2.team_id\r\n\t\t\t\t\t\t\t\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\t\t\t\t\t\t\t\torder by g.date desc, g.time desc, g.location asc"},{"filename":"game-db.js","title":"getSetScoreByGame(gameid)","query":"select g.game_id, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type = 'Round - 1', '', concat(' ',g.type))) as tournament, concat(t1.country,' ',t1.number) as team1, concat(t2.country,' ',t2.number) as team2, ss.team1_set1, ss.team2_set1, ss.team1_set2, ss.team2_set2, ss.team1_set3, ss.team2_set3 from setscore as ss\r\n\t\t\t\t\t\t\t\tjoin game as g on g.game_id = ss.game_id\r\n\t\t\t\t\t\t\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\t\t\t\t\t\t\tjoin team as t1 on t1.team_id=g.team1_id\r\n\t\t\t\t\t\t\t\tjoin team as t2 on t2.team_id=g.team2_id\r\n\t\t\t\t\t\t\t\torder by tournament, team1, team2\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(game_id)}"},{"filename":"game-db.js","title":"getMasterScoreChanges()","query":"\r\n\t\tselect * from (\r\n\t\t\tselect \r\n\t\t\t\ts.game_id,\r\n\t\t\t\tdate_format(g.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(g.time,'%l:%i %p') as time,\r\n\t\t\t\tconcat(t1.category,' ',t1.gender,' ',t1.country,t1.number) as team_1,\r\n\t\t\t\tconcat(t2.category,' ',t2.gender,' ',t2.country,t2.number) as team_2,\r\n\t\t\t\tt.sport,\r\n\t\t\t\tconcat(score1,' - ',score2) as score, \r\n\t\t\t\tconcat(team1_set1,' - ',team2_set1) as set_1, \r\n\t\t\t\tconcat(team1_set2,' - ',team2_set2) as set_2, \r\n\t\t\t\tconcat(team1_set3,' - ',team2_set3) as set_3, \r\n\t\t\t\t0 as change_id,\r\n\t\t\t\tcurrent_timestamp() as timestamp,\r\n\t\t\t\tdate_format(current_timestamp(),'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(current_timestamp(),'%l:%i %p') as change_time,\r\n\t\t\t\t'' as reason\r\n\t\t\tfrom sign as s\r\n\t\t\tleft join setscore as ss on s.game_id = ss.game_id\r\n\t\t\tjoin game as g on s.game_id = g.game_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\tunion\r\n\t\t\tselect \r\n\t\t\t\tscl.game_id,\r\n\t\t\t\tdate_format(g.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(g.time,'%l:%i %p') as time,\r\n\t\t\t\tconcat(t1.category,' ',t1.gender,' ',t1.country,t1.number) as team_1,\r\n\t\t\t\tconcat(t2.category,' ',t2.gender,' ',t2.country,t2.number) as team_2,\r\n\t\t\t\tt.sport,\r\n\t\t\t\tconcat(score1,' - ',score2) as score, \r\n\t\t\t\tconcat(team1_set1,' - ',team2_set1) as set_1, \r\n\t\t\t\tconcat(team1_set2,' - ',team2_set2) as set_2, \r\n\t\t\t\tconcat(team1_set3,' - ',team2_set3) as set_3, \r\n\t\t\t\tchange_id as change_id,\r\n\t\t\t\ttimestamp,\r\n\t\t\t\tdate_format(timestamp,'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(timestamp,'%l:%i %p') as change_time,\r\n\t\t\t\treason\r\n\t\t\tfrom scorechangelog as scl\r\n\t\t\tjoin game as g on scl.game_id = g.game_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id) as internal\r\n\t\t\twhere game_id in (select game_id from scorechangelog)\r\n\t\t\torder by game_id, timestamp desc\r\n\t"},{"filename":"game-db.js","title":"insertSetScore3Sets(body)","query":"insert into setscore values (${con.escape(body.gameId)}, ${con.escape(body.team1Set1)}, ${con.escape(body.team2Set1)}, ${con.escape(body.team1Set2)}, ${con.escape(body.team2Set2)}, ${con.escape(body.team1Set3)}, ${con.escape(body.team2Set3)})"},{"filename":"game-db.js","title":"insertSetScore2Sets(body)","query":"insert into setscore (game_id, team1_set1, team2_set1, team1_set2, team2_set2) values (${con.escape(body.gameId)}, ${con.escape(body.team1Set1)}, ${con.escape(body.team2Set1)}, ${con.escape(body.team1Set2)}, ${con.escape(body.team2Set2)})"},{"filename":"game-db.js","title":"getGameUsersDB(gameId)","query":"\r\n\tselect g.game_id, r.firstname, r.lastname, r.registrant_id, tm.id, tm.name as team from registrants as r\r\n\t\tjoin teamnotes as tm on r.team = tm.name\r\n\t\tjoin game as g on g.team1_id = tm.id or g.team2_id = tm.id\r\n\t\twhere game_id = ${con.escape(gameId)}\r\n\t\torder by tm.name, firstname, lastname"},{"filename":"game-db.js","title":"getMasterScheduleChanges()","query":"\r\n\t\tselect * from (\r\n\t\t\tselect \r\n\t\t\t\tg.game_id,\r\n\t\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tourny,\r\n\t\t\t\tg.type,\r\n\t\t\t\tconcat(t1.category,' ',t1.gender,' ',t1.country,t1.number) as team1,\r\n\t\t\t\tconcat(t2.category,' ',t2.gender,' ',t2.country,t2.number) as team2,\r\n\t\t\t\tdate_format(g.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(g.time,'%l:%i %p') as time,\r\n\t\t\t\tg.location,\r\n\t\t\t\t0 as change_id,\r\n\t\t\t\tdate_add(current_timestamp(), interval -4 hour) as timestamp,\r\n\t\t\t\tdate_format(date_add(current_timestamp(), interval -4 hour),'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(date_add(current_timestamp(), interval -4 hour),'%l:%i %p') as change_time,\r\n\t\t\t\t'current' as change_type,\r\n\t\t\t\t'' as reason \r\n\t\t\tfrom game as g\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tunion\r\n\t\t\tselect \r\n\t\t\t\tgcl.game_id,\r\n\t\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tourny,\r\n\t\t\t\tg.type,\r\n\t\t\t\tconcat(t1.category,' ',t1.gender,' ',t1.country,t1.number) as team1,\r\n\t\t\t\tconcat(t2.category,' ',t2.gender,' ',t2.country,t2.number) as team2,\r\n\t\t\t\tdate_format(gcl.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(gcl.time,'%l:%i %p') as time,\r\n\t\t\t\tgcl.location,\r\n\t\t\t\tchange_id as change_id,\r\n\t\t\t\tdate_add(timestamp, interval -4 hour) as timestamp,\r\n\t\t\t\tdate_format(date_add(timestamp, interval -4 hour),'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(date_add(timestamp, interval -4 hour),'%l:%i %p') as change_time,\r\n\t\t\t\tgcl.change_type,\r\n\t\t\t\treason\r\n\t\t\tfrom gameoptionschangelog as gcl\r\n\t\t\tjoin game as g on gcl.game_id = g.game_id\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tjoin scheduleoptions as so using(schedule_key) where published = 1\r\n\t\t) as internal\r\n\t\twhere game_id in (select game_id from gameoptionschangelog \r\n\t\t\t\t\t\t\tjoin scheduleoptions using(schedule_key) where published = 1)\r\n\t\torder by game_id, timestamp desc\r\n\t"},{"filename":"game-db.js","title":"getRefScheduleChanges(userId)","query":"\r\n\t\tselect * from (\r\n\t\t\tselect \r\n\t\t\t\tg.game_id,\r\n\t\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tourny,\r\n\t\t\t\tg.type,\r\n\t\t\t\tconcat(t1.country,t1.number) as team1,\r\n\t\t\t\tconcat(t2.country,t2.number) as team2,\r\n\t\t\t\tdate_format(g.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(g.time,'%l:%i %p') as time,\r\n\t\t\t\tg.location,\r\n\t\t\t\t0 as change_id,\r\n\t\t\t\tdate_add(current_timestamp(), interval -4 hour) as timestamp,\r\n\t\t\t\tdate_format(date_add(current_timestamp(), interval -4 hour),'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(date_add(current_timestamp(), interval -4 hour),'%l:%i %p') as change_time,\r\n\t\t\t\t'' as reason,\r\n\t\t\t\tt.sport,\r\n\t\t\t\t'current' as change_type\r\n\t\t\tfrom game as g\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\r\n\t\t\tunion\r\n\t\t\t\r\n\t\t\tselect \r\n\t\t\t\tgcl.game_id,\r\n\t\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tourny,\r\n\t\t\t\tg.type,\r\n\t\t\t\tconcat(t1.country,t1.number) as team1,\r\n\t\t\t\tconcat(t2.country,t2.number) as team2,\r\n\t\t\t\tdate_format(gcl.date,'%a, %e-%b') as date,\r\n\t\t\t\ttime_format(gcl.time,'%l:%i %p') as time,\r\n\t\t\t\tgcl.location,\r\n\t\t\t\tchange_id as change_id,\r\n\t\t\t\tdate_add(timestamp, interval -4 hour) as timestamp,\r\n\t\t\t\tdate_format(date_add(timestamp, interval -4 hour),'%a, %e-%b') as change_date,\r\n\t\t\t\ttime_format(date_add(timestamp, interval -4 hour),'%l:%i %p') as change_time,\r\n\t\t\t\treason,\r\n\t\t\t\tt.sport,\r\n\t\t\t\tgcl.change_type\r\n\t\t\tfrom gameoptionschangelog as gcl\r\n\t\t\tjoin game as g on gcl.game_id = g.game_id\r\n\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tjoin scheduleoptions as so using(schedule_key) where published = 1\r\n\t\t) as internal\r\n\t\tjoin referee as ref using(sport)\r\n\t\twhere game_id in (select game_id from gameoptionschangelog as gcl join scheduleoptions as so using(schedule_key) where published = 1)\r\n\t\tand ref.username = ${con.escape(userId)}\r\n\t\tand timestamp > '2021-11-04'\r\n\t\torder by game_id, timestamp desc;\r\n\t"},{"filename":"game-db.js","title":"gameChangeBroadcast(body, gameType)","query":" async function gameChangeBroadcast(body, gameType) { //checked 2019-06-05\r\n\tconst content = `concat(\"The \",${con.escape(body.tournament)},\" ${gameType} \",\" previously scheduled for \",date_format(${con.escape(body.date)},'%a, %b-%d'),\" at \", time_format(${con.escape(body.time)},'%l:%i %p'), \" on \", ${con.escape(body.location)},\" was moved to \",date_format(${con.escape(body.newDate)},'%a, %b-%d'), \" at \",time_format(${con.escape(body.newTime)},'%l:%i %p'), \" on \",${con.escape(body.newLocation)})`;\r\n\tconst query = `insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},t.team_id,'0cd6e8a4-a449-4800-a361-d59028c0e23c',current_timestamp, sha1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},current_timestamp)), 1  from team as t\r\n\t\t\t\t\t\t\t\tjoin game as g on g.team1_id = t.team_id\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(body.gameId)}\r\n\t\t\t\t\t\t\t\tUNION\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},t.team_id,'0cd6e8a4-a449-4800-a361-d59028c0e23c',CURRENT_TIMESTAMP, sha1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${content},current_timestamp)), 1 from team as t\r\n\t\t\t\t\t\t\t\tjoin game as g on g.team2_id = t.team_id\r\n\t\t\t\t\t\t\t\twhere g.game_id = ${con.escape(body.gameId)};`;\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"game-db.js","title":"deleteTournamentBroadcast(body)","query":" async function deleteTournamentBroadcast(body) {\r\n\tconst content = `concat(\"The \",${con.escape(body.tournament)},\" Tournament previously scheduled for \",date_format(${con.escape(body.date)},'%a, %b-%d'),\" at \", time_format(${con.escape(body.time)},'%l:%i %p'), \" on \",${con.escape(body.location)},\" has been cancelled\")`;\r\n\r\n\tconst query = `insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender),${con.escape(content)},t.team_id,'5daa0c58-655e-42f6-a316-842520624c22',current_timestamp, sha1(concat(concat(t.category,' ',t.gender),${con.escape(content)},current_timestamp)), 0\r\n\t\t\t\t\t\t\t\tfrom team as t\r\n\t\t\t\t\t\t\t\twhere t.category=${con.escape(body.category)} and t.gender=${con.escape(body.gender)};`;\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// "},{"filename":"game-db.js","title":"tournamentChangeBroadcast(body)","query":" async function tournamentChangeBroadcast(body) { //checked 2019-06-05\r\n\tconst content = `concat(\"The \",${con.escape(body.tournament)},\" Tournament previously scheduled for \",date_format(${con.escape(body.date)},'%a, %b-%d'),\" at \", time_format(${con.escape(body.time)},'%l:%i %p'), \" on \", ${con.escape(body.location)},\" was moved to \",date_format(${con.escape(body.newDate)},'%a, %b-%d'), \" at \",time_format(${con.escape(body.newTime)},'%l:%i %p'), \" on \",${con.escape(body.newLocation)})`;\r\n\tconst query = `insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender),${content},t.team_id,'5daa0c58-655e-42f6-a316-842520624c22',current_timestamp, sha1(concat(concat(t.category,' ',t.gender),${content},current_timestamp)), 0\r\n\t\t\t\t\t\t\t\tfrom team as t\r\n\t\t\t\t\t\t\t\twhere t.category=${con.escape(body.category)} and t.gender=${con.escape(body.gender)};`;\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"game-db.js","title":"scoreChangeRequests()","query":" async function scoreChangeRequests() {\r\n\tconst query = [\r\n\t\t`select distinct\r\n\t\t\tg.game_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport,if(g.type = 'Round - 1', '', concat(' ',g.type))) as tournament,\r\n\t\t\tdate_format(g.date, '%W, %m/%d') as date,\r\n\t\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\t\tg.location,\r\n\t\t\tconcat(t1.country, ' ', t1.number) as short1,\r\n\t\t\tconcat(t2.country,' ' , t2.number) as short2,\r\n\t\t\tt1.country as flag1,\r\n\t\t\tt2.country as flag2,\r\n\t\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\t\ts.score1, \r\n\t\t\ts.score2, \r\n\t\t\tss.team1_set1, \r\n\t\t\tss.team2_set1, \r\n\t\t\tss.team1_set2, \r\n\t\t\tss.team2_set2, \r\n\t\t\tss.team1_set3, \r\n\t\t\tss.team2_set3,\r\n\t\t\tt.sport,\r\n\t\t\tconcat(s.coach1, ' - ', s.coach2) as coaches\r\n\t\tfrom scorechangerequest as scr\r\n\t\tjoin game as g on scr.game_id = g.game_id\r\n\t\tjoin sign as s on g.game_id = s.game_id\r\n\t\tleft join setscore as ss on g.game_id = ss.game_id\r\n\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\twhere scr.status = 'Pending Decision'\r\n\t\torder by \r\n\t\t\tg.date desc, \r\n\t\t\tg.time desc, \r\n\t\t\tg.location asc;`,\r\n\t\t`\r\n\t\tselect \r\n\t\t\tgame_id as gameId, \r\n\t\t\tscore1,\r\n\t\t\tscore2, \r\n\t\t\tteam1_set1,\r\n\t\t\tteam2_set1,\r\n\t\t\tteam1_set2,\r\n\t\t\tteam2_set2,\r\n\t\t\tteam1_set3,\r\n\t\t\tteam2_set3,\r\n\t\t\tcount(*) as count\r\n\t\tfrom scorechangerequest as scr\r\n\t\twhere status = 'Pending Decision'\r\n\t\tgroup by \r\n\t\t\tgame_id, \r\n\t\t\tscore1, \r\n\t\t\tscore2, \r\n\t\t\tteam1_set1, \r\n\t\t\tteam2_set1, \r\n\t\t\tteam1_set2, \r\n\t\t\tteam2_set2, \r\n\t\t\tteam1_set3, \r\n\t\t\tteam2_set3;`\r\n\t];\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// "},{"filename":"game-db.js","title":"rejectScoreChange(body)","query":" async function rejectScoreChange(body) {\r\n\tlet team1set1_val = body.team1_set1 === null ? 'is null' : `= ${con.escape(body.team1_set1)}`\r\n\tlet team2set1_val = body.team2_set1 === null ? 'is null' : `= ${con.escape(body.team2_set1)}`\r\n\tlet team1set2_val = body.team1_set2 === null ? 'is null' : `= ${con.escape(body.team1_set2)}`\r\n\tlet team2set2_val = body.team2_set2 === null ? 'is null' : `= ${con.escape(body.team2_set2)}`\r\n\tlet team1set3_val = body.team1_set3 === null ? 'is null' : `= ${con.escape(body.team1_set3)}`\r\n\tlet team2set3_val = body.team2_set3 === null ? 'is null' : `= ${con.escape(body.team2_set3)}`\r\n\r\n\tconst query = `\r\n\tupdate scorechangerequest\r\n\tset status = 'Rejected'\r\n\twhere \r\n\t\tgame_id = ${con.escape(body.gameId)} and \r\n\t\tscore1 = ${con.escape(body.score1)} and \r\n\t\tscore2 = ${con.escape(body.score2)} and \r\n\t\tteam1_set1 ${team1set1_val} and \r\n\t\tteam2_set1 ${team2set1_val} and \r\n\t\tteam1_set2 ${team1set2_val} and \r\n\t\tteam2_set2 ${team2set2_val} and \r\n\t\tteam1_set3 ${team1set3_val} and \r\n\t\tteam2_set3 ${team2set3_val}`;\r\n\r\n\tconsole.log(query);\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"game-db.js","title":"acceptScoreChange(body)","query":" async function acceptScoreChange(body) {\r\n\tlet team1set1_val = body.team1_set1 === null ? 'is null' : `= ${con.escape(body.team1_set1)}`;\r\n\tlet team2set1_val = body.team2_set1 === null ? 'is null' : `= ${con.escape(body.team2_set1)}`;\r\n\tlet team1set2_val = body.team1_set2 === null ? 'is null' : `= ${con.escape(body.team1_set2)}`;\r\n\tlet team2set2_val = body.team2_set2 === null ? 'is null' : `= ${con.escape(body.team2_set2)}`;\r\n\tlet team1set3_val = body.team1_set3 === null ? 'is null' : `= ${con.escape(body.team1_set3)}`;\r\n\tlet team2set3_val = body.team2_set3 === null ? 'is null' : `= ${con.escape(body.team2_set3)}`;\r\n\tlet setScoreSection = body.team1_set1 === null ? '' : `\t\r\n\t\t#Update the setscore table\r\n\t\tupdate setscore\r\n\t\tset\r\n\t\t\tteam1_set1 = ${con.escape(body.team1_set1)}, \r\n\t\t\tteam2_set1 = ${con.escape(body.team2_set1)}, \r\n\t\t\tteam1_set2 = ${con.escape(body.team1_set2)}, \r\n\t\t\tteam2_set2 = ${con.escape(body.team2_set2)}, \r\n\t\t\tteam1_set3 = ${con.escape(body.team1_set3)}, \r\n\t\t\tteam2_set3 = ${con.escape(body.team2_set3)}\r\n\t\twhere game_id = ${con.escape(body.gameId)};\r\n\t`;\r\n\r\n\tconst query = `\r\n\t\tstart transaction;\r\n\r\n\t\tinsert into scorechangelog (\r\n\t\t\tchange_id, \r\n\t\t\tgame_id, \r\n\t\t\tscore1, \r\n\t\t\tscore2, \r\n\t\t\tteam1_set1, \r\n\t\t\tteam2_set1, \r\n\t\t\tteam1_set2, \r\n\t\t\tteam2_set2, \r\n\t\t\tteam1_set3, \r\n\t\t\tteam2_set3, \r\n\t\t\ttimestamp,\r\n\t\t\treason) \r\n\t\tselect\r\n\t\t\t0,\r\n\t\t\ts.game_id, \r\n\t\t\ts.score1, \r\n\t\t\ts.score2, \r\n\t\t\tteam1_set1, \r\n\t\t\tteam2_set1, \r\n\t\t\tteam1_set2, \r\n\t\t\tteam2_set2, \r\n\t\t\tteam1_set3, \r\n\t\t\tteam2_set3, \r\n\t\t\tcurrent_timestamp(),\r\n\t\t\t${con.escape(body.reason)}\r\n\t\tfrom sign as s\r\n\t\tleft join setscore as ss on s.game_id = ss.game_id\r\n\t\twhere s.game_id = ${con.escape(body.gameId)};\r\n\r\n\t\t#Change status in scorechangerequest table to accepted\r\n\t\tupdate scorechangerequest\r\n\t\tset status = 'Accepted'\r\n\t\twhere \r\n\t\t\tgame_id = ${con.escape(body.gameId)} and \r\n\t\t\tscore1 = ${con.escape(body.score1)} and \r\n\t\t\tscore2 = ${con.escape(body.score2)} and \r\n\t\t\tteam1_set1 ${team1set1_val} and \r\n\t\t\tteam2_set1 ${team2set1_val} and \r\n\t\t\tteam1_set2 ${team1set2_val} and \r\n\t\t\tteam2_set2 ${team2set2_val} and \r\n\t\t\tteam1_set3 ${team1set3_val} and \r\n\t\t\tteam2_set3 ${team2set3_val};\r\n\r\n\t\t#Reject all score changes for that game\r\n\t\tupdate scorechangerequest\r\n\t\tset status = 'Rejected'\r\n\t\twhere \r\n\t\t\tgame_id = ${con.escape(body.gameId)} and\r\n\t\t\tstatus = 'Pending Decision';\r\n\r\n\t\t#Update the sign table\r\n\t\tupdate sign\r\n\t\tset \r\n\t\t\tscore1 = ${con.escape(body.score1)}, \r\n\t\t\tscore2 = ${con.escape(body.score2)}\r\n\t\twhere game_id = ${con.escape(body.gameId)};\r\n\r\n\t\t${setScoreSection}\r\n\r\n\t\t#Broadcast the score change\r\n\t\tinsert into post\r\n\t\t(select \r\n\t\t\t0 as post_id,\r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.country,t.number) as title,\r\n\t\t\t${con.escape(body.content)} as post,\r\n\t\t\tt.team_id as team_id,\r\n\t\t\t'd7f8bbd7-830a-45d7-8102-c2bf1b5a1865' as poster_username,\r\n\t\t\tcurrent_timestamp as time_stamp,\r\n\t\t\tSHA1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${con.escape(body.content)},current_timestamp)) as social_hash_id,\r\n\t\t\t1 as comments_allowed \r\n\t\tFROM team as t\r\n\t\tjoin game as g on g.team1_id=t.team_id\r\n\t\twhere g.game_id = ${con.escape(body.gameId)})\r\n\t\tUNION\r\n\t\t(select \r\n\t\t\t0 as post_id,\r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.country,t.number) as title,\r\n\t\t\t${con.escape(body.content)} as post,\r\n\t\t\tt.team_id as team_id,\r\n\t\t\t'd7f8bbd7-830a-45d7-8102-c2bf1b5a1865' as poster_username,\r\n\t\t\tcurrent_timestamp as time_stamp,\r\n\t\t\tSHA1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),${con.escape(body.content)},current_timestamp)) as social_hash_id,\r\n\t\t\t1 as comments_allowed \r\n\t\tFROM team as t\r\n\t\tjoin game as g on g.team2_id=t.team_id\r\n\t\twhere g.game_id = ${con.escape(body.gameId)});\r\n\r\n\t\tcommit;\r\n\t`;\r\n\r\n\tconsole.log(query);\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n"},{"filename":"game-db.js","title":"getMyScoreChanges(userId, recent)","query":" async function getMyScoreChanges(userId, recent) {\r\n\tconst timestamp_string = recent ? `lv.scores` : `1997-01-01`;\r\n\r\n\tconst query = `\r\n\t\tselect distinct\r\n\t\t\talias.change_id,\r\n\t\t\talias.game_id,\r\n\t\t\talias.type,\r\n\t\t\talias.score1,\r\n\t\t\talias.score2,\r\n\t\t\talias.team1_set1,\r\n\t\t\talias.team2_set1,\r\n\t\t\talias.team1_set2,\r\n\t\t\talias.team2_set2,\r\n\t\t\talias.team1_set3,\r\n\t\t\talias.team2_set3,\r\n\t\t\talias.date,\r\n\t\t\talias.time, \r\n\t\t\talias.location,\r\n\t\t\talias.catGender,\r\n\t\t\talias.sport,\r\n\t\t\talias.teams,\r\n\t\t\talias.timestamp as timestamp_raw,\r\n\t\t\tdate_format(alias.timestamp,'%a, %b-%d @ %l:%i %p') as timestamp\r\n\t\tfrom (\r\n\t\t\tselect \r\n\t\t\t\tsc.change_id,\r\n\t\t\t\tg.game_id,\r\n\t\t\t\tg.type,\r\n\t\t\t\tscore1,\r\n\t\t\t\tscore2,\r\n\t\t\t\tteam1_set1,\r\n\t\t\t\tteam2_set1,\r\n\t\t\t\tteam1_set2,\r\n\t\t\t\tteam2_set2,\r\n\t\t\t\tteam1_set3,\r\n\t\t\t\tteam2_set3,\r\n\t\t\t\tdate_format(g.date,'%a, %b-%d') as date, \r\n\t\t\t\tdate_format(g.time,'%l:%i %p') as time, \r\n\t\t\t\tg.location,\r\n\t\t\t\tconcat(t.category,' ',t.gender) as catGender,\r\n\t\t\t\tlower(t.sport) as sport,\r\n\t\t\t\tconcat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams,\r\n\t\t\t\tsc.timestamp\r\n\t\t\tfrom scorechangelog as sc\r\n\t\t\tjoin game as g on g.game_id = sc.game_id\r\n\t\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\r\n\t\t\tunion\r\n\r\n\t\t\tselect distinct\r\n\t\t\t\t9999 as change_id,\r\n\t\t\t\tg.game_id,\r\n\t\t\t\tg.type,\r\n\t\t\t\ts.score1,\r\n\t\t\t\ts.score2,\r\n\t\t\t\tss.team1_set1,\r\n\t\t\t\tss.team2_set1,\r\n\t\t\t\tss.team1_set2,\r\n\t\t\t\tss.team2_set2,\r\n\t\t\t\tss.team1_set3,\r\n\t\t\t\tss.team2_set3,\r\n\t\t\t\tdate_format(g.date,'%a, %b-%d') as date, \r\n\t\t\t\tdate_format(g.time,'%l:%i %p') as time, \r\n\t\t\t\tg.location,\r\n\t\t\t\tconcat(t.category,' ',t.gender) as catGender,\r\n\t\t\t\tlower(t.sport) as sport,\r\n\t\t\t\tconcat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams,\r\n\t\t\t\tcurrent_timestamp() as timestamp\r\n\t\t\tfrom sign as s\r\n\t\t\tjoin game as g using(game_id)\r\n\t\t\tjoin scorechangelog as sc using(game_id)\r\n\t\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\tleft join setscore as ss using(game_id)) \r\n\t\tas alias\r\n\t\tjoin game as g using(game_id)\r\n\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\tleft join subscribe as s on s.team_id = t1.team_id or s.team_id = t2.team_id or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin subscribe as s on g.team1_id = s.team_id or g.team2_id = s.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere s.username = ${con.escape(userId)}))\r\n\t\tleft join coach as co on co.team_id = t1.team_id or co.team_id = t2.team_id or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin coach as co on g.team1_id = co.team_id or g.team2_id = co.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere co.username = ${con.escape(userId)}))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleft join captain as ca on ca.country = t1.country or ca.country = t2.country or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin captain as ca on t1.country = ca.country or t2.country = ca.country\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere ca.username = ${con.escape(userId)}))\r\n\r\n\t\tleft join lastvisits as lv on lv.username = ${con.escape(userId)}\r\n\t\twhere \r\n\t\t\ttimestamp > ${timestamp_string} and\r\n\t\t\t(s.username = ${con.escape(userId)} or \r\n\t\t\tco.username = ${con.escape(userId)} or\r\n\t\t\tca.username = ${con.escape(userId)})\r\n\t\torder by game_id, change_id desc;\r\n\t`;\r\n\t\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"logistics-db.js","title":"getFamilyInfo()","query":"\r\n\t\t\tselect\r\n\t\t\t\tdate_format(date_add(f.timestamp,interval -4 hour), '%m-%d-%y') as timestamp,\r\n\t\t\t\tf.mg_fam_id,\r\n\t\t\t\tf.registration_id,\r\n\t\t\t\tf.firstname,\r\n\t\t\t\tf.lastname,\r\n\t\t\t\tf.email,\r\n\t\t\t\tf.phonenumber, \r\n\t\t\t\tf.is_member,\r\n\t\t\t\tf.member_number,\r\n\t\t\t\tf.has_paid,\r\n\t\t\t\tf.total_cost,\r\n\t\t\t\tconcat(r.firstname, ' ', r.lastname) as registrant_name,\r\n                r.registrant_id\r\n\t\t\tfrom registrants as r\r\n\t\t\tleft join families as f\r\n\t\t\ton f.registration_id=r.registration_id\r\n\t\t\twhere r.is_registered = 1\r\n\t\t\tORDER BY f.mg_fam_id ASC\r\n\t"},{"filename":"logistics-db.js","title":"getRegistrantInfoByID(id)","query":"\r\n\tselect * from mgdb.registrants where registrant_id = ${con.escape(id)}\r\n\t"},{"filename":"logistics-db.js","title":"getGradeMappings()","query":"\r\n\t\tselect * from grade_mapper\t\r\n\t"},{"filename":"logistics-db.js","title":"getSiteAssignments()","query":"\r\n\t\tselect\r\n\t\t\tdate_format(sa.date,'%a, %b-%d') as date,\r\n\t\t\tdate_format(sa.date, '%Y-%m-%d') as date_raw,\r\n\t\t\tl.location_name,\r\n\t\t\tl.location_id,\r\n\t\t\tusername,\r\n\t\t\tcount > 0 as active\r\n\t\tfrom siteassignments as sa\r\n\t\tjoin location as l\r\n\t\ton l.location_id = sa.location_id\r\n\t\tleft join (\r\n\t\t\tselect\r\n\t\t\t\tdate,\r\n\t\t\t\tlocation,\r\n\t\t\t\tcount(*) as count\r\n\t\t\tfrom game\r\n\t\t\tgroup by date, location\r\n\t\t\t) as c\r\n\t\ton c.date=sa.date\r\n\t\tand c.location=l.location_name\r\n\t\twhere l.location_name <> 'Clipboard'\r\n\t"},{"filename":"logistics-db.js","title":"getSiteAssignmentDates()","query":"\r\n\t\tselect distinct\r\n\t\t\tdate_format(date,'%a, %b-%d') as date\r\n\t\tfrom game\r\n\t\twhere date <> isnull(date)\r\n\t\torder by date\r\n\t"},{"filename":"logistics-db.js","title":"getSiteAssignmentLocations()","query":"\r\n\t\tselect distinct\r\n\t\t\tlocation\r\n\t\tfrom game\r\n\t\twhere location <> 'Clipboard'\r\n\t\torder by location\r\n\t"},{"filename":"logistics-db.js","title":"assignSiteDirector(obj)","query":"\r\n\t\tupdate siteassignments\r\n\t\tset username=${con.escape(obj.username)}\r\n\t\twhere date=${con.escape(obj.date)}\r\n\t\tand location_id=${con.escape(obj.location)}\r\n\t"},{"filename":"logistics-db.js","title":"getRegistrantInfo()","query":"\r\n\t\t\t\tselect r.registrant_id,\r\n\t\t\t\t    mg_registrant_id,\r\n\t\t\t\t\tdate_format(date_add(f.timestamp,interval -4 hour), '%m-%d-%y') as timestamp,\r\n\t\t\t\t\tr.registration_id,\r\n\t\t\t\t\tr.is_member,\r\n\t\t\t\t\tr.firstname,\r\n\t\t\t\t\tr.lastname,\r\n\t\t\t\t\tr.phonenumber,\r\n\t\t\t\t\tr.country,\r\n\t\t\t\t\tdate_format(dob,'%Y-%m-%d') as dob,\r\n\t\t\t\t\tr.gender,\r\n\t\t\t\t\tr.grade,\r\n\t\t\t\t\tr.team,\r\n\t\t\t\t\tr.category_gender,\r\n\t\t\t\t\tr.shirtsize,\r\n\t\t\t\t\tr.n_challah,\r\n\t\t\t\t\tf.email,\r\n\t\t\t\t\tr.notes,\r\n\t\t\t\t\tr.is_registered\r\n\t\t\t\tfrom registrants as r \r\n\t\t\t\tjoin families as f using(registration_id);\r\n\r\n\t\t\t\tselect short_name from country where short_name not in ('ACC','BIG','INT');\r\n\r\n\t\t\t\tselect concat(category,' ',gender) as cat_gen \r\n\t\t\t\tfrom catgender \r\n\t\t\t\twhere concat(category,' ',gender) not in ('Opening Ceremony', ' ');\r\n\t"},{"filename":"logistics-db.js","title":"getCaptainRegistrantInfo(username)","query":"\r\n\t\t\t\tselect r.registrant_id,\r\n\t\t\t\t\tmg_registrant_id,\r\n\t\t\t\t\tdate_format(date_add(f.timestamp,interval -4 hour), '%m-%d-%y') as timestamp,\r\n\t\t\t\t\tr.registration_id,\r\n\t\t\t\t\tr.is_member,\r\n\t\t\t\t\tr.firstname,\r\n\t\t\t\t\tr.lastname,\r\n\t\t\t\t\tr.phonenumber,\r\n\t\t\t\t\tr.country,\r\n\t\t\t\t\tdate_format(dob,'%Y-%m-%d') as dob,\r\n\t\t\t\t\tr.gender,\r\n\t\t\t\t\tr.grade,\r\n\t\t\t\t\tr.team,\r\n\t\t\t\t\tr.category_gender,\r\n\t\t\t\t\tr.shirtsize,\r\n\t\t\t\t\tr.n_challah,\r\n\t\t\t\t\tf.email\r\n\t\t\t\tfrom registrants as r \r\n\t\t\t\tjoin families as f using(registration_id)\r\n\t\t\t\tjoin captain as c using(country)\r\n\t\t\t\twhere is_registered = 1 and c.username = \"${username}\";\r\n\r\n\t\t\t\tselect distinct(country) as short_name from captain\r\n\t\t\t\t\twhere username = \"${username}\";\r\n\t\t\t\t\t\r\n\t\t\t\tselect distinct category_gender as cat_gen from registrants as r\r\n\t\t\t\t\tjoin captain as c using(country)\r\n\t\t\t\t\twhere category_gender not in ('Opening Ceremony', ' ') and username = \"${username}\"\r\n\t\t\t\t\torder by category_gender;\r\n\t"},{"filename":"logistics-db.js","title":"getFAQDB()","query":"SELECT * FROM faq;"},{"filename":"logistics-db.js","title":"putFamilyInfo(body, username)","query":"\r\n\t\t\t\t\tupdate families\r\n\t\t\t\t\t\tset firstname = ${con.escape(body.firstname)}, \r\n\t\t\t\t\t\tlastname = ${con.escape(body.lastname)}, \r\n\t\t\t\t\t\temail = ${con.escape(body.email)}, \r\n\t\t\t\t\t\tphonenumber = ${con.escape(body.phonenumber)}, \r\n\t\t\t\t\t\tis_member = ${con.escape(body.is_member)}, \r\n\t\t\t\t\t\tmember_number = ${con.escape(body.member_number)}, \r\n\t\t\t\t\t\thas_paid = ${con.escape(body.has_paid)},\r\n\t\t\t\t\t\tupdated_by = ${con.escape(username)}\r\n\t\t\t\t\t\twhere registration_id = ${con.escape(body.registration_id)} ;\r\n\t"},{"filename":"logistics-db.js","title":"putRegistrantInfo(body, username)","query":"\r\n\t\t\t\t\tupdate registrants \r\n\t\t\t\t\tset is_member = ${con.escape(body.is_member)},\r\n\t\t\t\t\tfirstname = ${con.escape(body.firstname)},\r\n\t\t\t\t\tlastname = ${con.escape(body.lastname)},\r\n\t\t\t\t\tphonenumber = ${con.escape(body.phonenumber)},\r\n\t\t\t\t\tcountry = ${con.escape(body.country)},\r\n\t\t\t\t\tdob = ${con.escape(body.dob)},\r\n\t\t\t\t\tgender = ${con.escape(body.gender)},\r\n\t\t\t\t\tgrade = ${con.escape(body.grade)},\r\n\t\t\t\t\tcategory_gender = ${con.escape(body.category_gender)},\r\n\t\t\t\t\tshirtsize = ${con.escape(body.shirtsize)},\r\n\t\t\t\t\tn_challah = ${con.escape(body.n_challah)},\r\n\t\t\t\t\tupdated_by = ${con.escape(username)},\r\n\t\t\t\t\tnotes = ${con.escape(body.notes)}\r\n\t\t\t\t\twhere registrant_id = ${con.escape(body.registrant_id)};\r\n\t"},{"filename":"logistics-db.js","title":"putFamilyRegistrantStatus(body, username)","query":"\r\n\t\t\t\t\tupdate registrants\r\n\t\t\t\t\t\tset is_registered= \"0\",\r\n\t\t\t\t\t\tupdated_by = ${con.escape(username)}\r\n\t\t\t\t\t\twhere registration_id = ${con.escape(body.registration_id)} ;\r\n\t"},{"filename":"logistics-db.js","title":"putRegistrantStatus(body, username)","query":"\r\n\t\t\t\t\tupdate registrants\r\n\t\t\t\t\t\tset is_registered= \"0\",\r\n\t\t\t\t\t\tupdated_by = ${con.escape(username)}\r\n\t\t\t\t\t\twhere registrant_id = ${con.escape(body.registrant_id)} ;\r\n\t"},{"filename":"logistics-db.js","title":"getCurrentAdVetSportInfo(registrantId)","query":"select displayName, rpName, (other.sport is not null) as registered from advetSportOptions as avso\r\n\tleft join (select * from registrants as r\r\n\tjoin advetsports as avs using(registrant_id)\r\n\twhere registrant_id = ${con.escape(registrantId)}) as other on avso.rpName = other.sport\r\n\twhere rpName <> 'allSports'\r\n\torder by displayName;"},{"filename":"logistics-db.js","title":"getCurrentAddonInfo(registrantId)","query":"\r\n\tselect a.name, (other.name is not null) as registered from addons as a\r\n\tleft join (select addon_id, registrant_id, name from registrants as r\r\n\tjoin addonregistrations as ar using(registrant_id)\r\n\tjoin addons as a using(addon_id)\r\n\twhere r.registrant_id = ${con.escape(registrantId)}) as other on a.name = other.name\r\n\tjoin registrants as r on r.category_gender = concat(a.category,' ',a.gender)\r\n\twhere r.registrant_id = ${con.escape(registrantId)}\r\n\tORDER BY name;"},{"filename":"logistics-db.js","title":"putCurrentAdVetSportInfo(body, registrantId)","query":" async function putCurrentAdVetSportInfo(body, registrantId) {\r\n\ttry{\r\n\r\n\t\t// console.log(\"PUT ADVETSPORT: \", body)\r\n\t\t// await dbQuery('SET TRANSACTION ISOLATION LEVEL READ COMMITTED');\r\n        // await dbQuery(\"start Transaction\", false, true)\r\n\r\n\t\tlet query1 = `\r\n\t\tDELETE FROM advetsports WHERE registrant_id = ${con.escape(registrantId)};\r\n\t\t`;\r\n\t\tawait dbQuery(query1, false, true)\r\n\r\n\t\tquery1 = \"\"\r\n\t\tfor(let i = 0; i < body.length; i++){\r\n\t\t\t\r\n\t\t\tif (body[i][\"registered\"] == 1) {\r\n\t\t\t\t// console.log(\"Inserting into db registered\", body[i])\r\n\t\t\t\tquery1 += `\r\n\t\t\t\t\tINSERT INTO advetsports (registrant_id,sport) values (${con.escape(registrantId)},${con.escape(body[i][\"rpName\"])});`;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\tif (query1 === \"\") {\r\n\r\n\t\t\treturn \"no advet added\";\r\n\t\t}\r\n\t\tawait dbQuery(query1, false, true);\r\n\t\t// console.log(\"Commiting\", query1)\r\n\t\t// await dbQuery(\"commit\")\r\n\t\treturn \"success\";\r\n\t}\r\n\tcatch (err) {\r\n\t\tconsole.error(`Error occurred while updating advet sport ${err.message}`, err);\r\n\t\tawait dbQuery(\"rollback\"); //await rollback()\r\n\t\treturn -1\r\n\t\r\n}\r\n}\r\n\r\n\r\n\r\n// "},{"filename":"logistics-db.js","title":"putCurrentAddonInfo(body,registrantId)","query":" async function putCurrentAddonInfo(body,registrantId) {\r\n\ttry{\r\n\t\t// await dbQuery('SET TRANSACTION ISOLATION LEVEL READ COMMITTED');\r\n        // await dbQuery(\"start Transaction\", false, true)\r\n\r\n\t\tconsole.log(\"CALLED: \", body)\r\n\r\n\t\tlet query1 = `\r\n\t\tDELETE FROM addonregistrations WHERE registrant_id = ${con.escape(registrantId)};\r\n\t\t`;\r\n\r\n\t\tconsole.log(\"First query: \", query1)\r\n\t\tawait dbQuery(query1, false, true)\r\n\r\n\r\n\r\n\t\tquery1 = \"\"\r\n\t\tfor(let i = 0; i < body.length; i++){\r\n\t\t\tconsole.log(\"For Loop is \", i)\r\n\t\t\tif (body[i][\"registered\"] == 1) {\r\n\t\t\t\t// console.log(\"Inserting into db registered\", body[i])\r\n\t\t\t\tquery1 += `\r\n\t\t\t\tinsert into addonregistrations\r\n\t\t\t\tselect distinct ${con.escape(registrantId)}, addon_id from addonregistrations as ar\r\n\t\t\t\tright join addons as a using(addon_id)\r\n\t\t\t\twhere name = ${con.escape(body[i][\"name\"])} and concat(category,' ',gender) = (select category_gender from registrants where registrant_id = ${con.escape(registrantId)}); `;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t// query1 += \"COMMIT;\"\r\n\t\tif (query1 !== \"\") {\r\n\t\t\tconsole.log(\"Running/executing query\", query1)\r\n\t\t\tawait dbQuery(query1, false, true);\r\n\t\t\treturn \"success\";\r\n\t\t}\r\n\t\treturn \"success\";\r\n\t}\r\n\tcatch (err) {\r\n\t\tconsole.error(`Error occurred while creating/updating session schedule details: ${err.message}`, err);\r\n\t\tawait dbQuery(\"rollback\"); //await rollback()\r\n\t\treturn \"Error, could not update addons\"\r\n\t\r\n}\r\n}"},{"filename":"post-db.js","title":"getBroadcastDates()","query":"\r\n\t\tselect distinct date from game as g\r\n\t\tleft join sign as s using(game_id)\r\n\t\twhere s.score1 is null and status = 'PENDING' and type <> 'Tournament'\r\n\t\torder by date asc\r\n\t"},{"filename":"post-db.js","title":"makeScheduleChangePost(team_id, team_name, postText)","query":"\r\n\t\tinsert into post\r\n\t\tvalues (0,${con.escape(team_name)},${con.escape(postText)},${con.escape(team_id)},\r\n\t\t'0cd6e8a4-a449-4800-a361-d59028c0e23c',current_timestamp, sha1(concat(${con.escape(team_name)},\r\n\t\t${con.escape(postText)},current_timestamp)), 1)\r\n\t"},{"filename":"post-db.js","title":"broadcastCountry(content, country, userId, allowComments)","query":"insert into post \r\n\t\t\t\t\t\t\t\tselect 0 as post_id,c.long_name as title,${con.escape(content)} as post,t.team_id, '${userId}' as poster_username,current_timestamp as time_stamp, sha1(concat('EVERYONE',${con.escape(content)},current_timestamp)) as social_hash_id, ${allowComments} as comments_allowed\r\n\t\t\t\t\t\t\t\tfrom team as t\r\n\t\t\t\t\t\t\t\tjoin country as c on c.short_name=t.country\r\n\t\t\t\t\t\t\t\twhere c.long_name=${con.escape(country)}\r\n\t\t\t\t\t\t\t\torder by t.team_id asc"},{"filename":"post-db.js","title":"getPotentialTeamsForUnassignedGame(game_id)","query":"\r\n\t\tselect\r\n\t\t\ttm.team_id\r\n\t\tfrom game as g\r\n\t\tjoin tournament as t using(tournament_id)\r\n\t\tjoin team as tm on t.category = tm.category and t.gender = tm.gender\r\n\t\twhere game_id = ${con.escape(game_id)}\r\n\t"},{"filename":"post-db.js","title":"broadcastCategory(message, category, userId, allowComments)","query":"insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender),${con.escape(message)},t.team_id,'${userId}',current_timestamp, sha1(concat(concat(t.category,' ',t.gender),${con.escape(message)},current_timestamp)), ${allowComments} as comments_allowed\r\n\t\t\t\t\t\t\t\tfrom team as t\r\n\t\t\t\t\t\t\t\twhere concat(t.category,'-',t.gender) = ${con.escape(category)};"},{"filename":"post-db.js","title":"addScheduledPost(userId, datetime, audience, groupName, message, allowComments)","query":"INSERT INTO scheduledPosts VALUES (0, ${con.escape(userId)}, ${con.escape(datetime)}, ${con.escape(audience)}, ${con.escape(groupName)}, ${con.escape(message)}, ${con.escape(allowComments)});\r\n\t"},{"filename":"post-db.js","title":"getNewsByUser(userId)","query":"select distinct p.title, p.post, u.username, u.first_name, u.last_name, poster_username, p.time_stamp, p.comments_allowed, p.social_hash_id, count(l.username) as total_likes, exists(select * from likes as l where l.username = ${con.escape(userId)} and l.social_hash_id = p.social_hash_id) as liked from post as p\r\n\t\t\t\t\t\t\t\tjoin subscribe as s on s.team_id = p.team_id\r\n\t\t\t\t\t\t\t\tjoin user as u on u.username = p.poster_username\r\n\t\t\t\t\t\t\t\tleft join likes as l on l.social_hash_id = p.social_hash_id\r\n\t\t\t\t\t\t\t\twhere s.username = ${con.escape(userId)}\r\n\t\t\t\t\t\t\t\tgroup by p.post_id\r\n\t\t\t\t\t\t\t\torder by p.time_stamp desc"},{"filename":"post-db.js","title":"getCommentsByEmail(userId)","query":"\r\n\tselect distinct c.comment_id, p.social_hash_id, concat(u.first_name,' ',u.last_name) as poster, c.time_stamp, c.comment, c.comment_id from post as p\r\n\t\tjoin comment as c on c.social_hash_id = p.social_hash_id\r\n\t\tleft join badcomments as bc on c.comment_id = bc.comment_id\r\n\t\tjoin user as u on u.username = c.poster_username\r\n\t\tjoin subscribe as s on s.team_id = p.team_id\r\n\t\twhere s.username = ${con.escape(userId)} and bc.comment_id is null\r\n\t\torder by c.time_stamp desc;"},{"filename":"post-db.js","title":"getDatesPost()","query":"select * from scheduleDate"},{"filename":"post-db.js","title":"getTimesPost()","query":"select * from scheduleTime"},{"filename":"post-db.js","title":"makeDMChannel()","query":"insert into team values(0, 'Internal', 'Private Message', 'INT', '', '')"},{"filename":"post-db.js","title":"addLikesDB(userId, socialHash)","query":"\r\n\tINSERT INTO likes (social_hash_id, username) VALUES (${con.escape(socialHash)}, ${con.escape(userId)})\r\n\t"},{"filename":"post-db.js","title":"removeLikesDB(userId, socialHash)","query":"\r\n\tdelete from likes where social_hash_id=${con.escape(socialHash)} and username=${con.escape(userId)};\r\n\t"},{"filename":"post-db.js","title":"insertCommentDB(userId, socialHash, text)","query":"\r\n\t\tinsert into comment values (0, ${con.escape(socialHash)},${con.escape(text)},${con.escape(userId)}, CURRENT_TIMESTAMP);\r\n\t"},{"filename":"post-db.js","title":"insertBadCommentDB(comment_id, bad_words)","query":"INSERT INTO badcomments VALUES (${con.escape(comment_id)}, ${con.escape(bad_words)}, \"PENDING\");\r\n\t"},{"filename":"post-db.js","title":"getNumSubscribers(team_id)","query":"\r\n\t\tselect count(*) as num_recipients from subscribe where team_id=${con.escape(team_id)}\r\n\t"},{"filename":"post-db.js","title":"getNumSubscribersCountry(country)","query":"\r\n\t\tselect \r\n\t\t\tcount(distinct username) as num_recipients\r\n\t\tfrom team as t\r\n\t\tjoin subscribe as s on t.team_id = s.team_id\r\n\t\tjoin country as c on t.country = c.short_name\r\n\t\twhere c.long_name=${con.escape(country)};\r\n\t"},{"filename":"post-db.js","title":"getNumSubscribersCatGender(cat, gender)","query":"\r\n\t\tselect \r\n\t\t\tcount(distinct username) as num_recipients\r\n\t\tfrom team as t\r\n\t\tjoin subscribe as s on t.team_id = s.team_id\r\n\t\twhere t.category = ${con.escape(cat)} and t.gender = ${con.escape(gender)};\r\n\t"},{"filename":"post-db.js","title":"broadcastTeamGeneric(content, teamid, allowComments, title = null, userId = null, medal = null)","query":"insert into post \r\n\t\t\tselect 0 as post_id, '${title}', ${content} as post,t.team_id,${con.escape(userId)} as poster_username,current_timestamp as time_stamp, sha1(concat(${con.escape(title)},${con.escape(content)},current_timestamp)) as social_hash, ${allowComments} as comments_allowed\r\n\t\t\tfrom team as t\r\n\t\t\twhere t.team_id=${con.escape(teamid)}"},{"filename":"post-db.js","title":"getTeamFromSocialHash(socialHash)","query":"select * from post\r\n\twhere social_hash_id = ${con.escape(socialHash)}\r\n\t"},{"filename":"post-db.js","title":"getCoachesFromTeams(teams)","query":"select username from coach where team_id in (${teamIDs})"},{"filename":"post-db.js","title":"broadcastTeam(content, teamid, allowComments, title = null, userId = null, medal = null)","query":" async function broadcastTeam(content, teamid, allowComments, title = null, userId = null, medal = null) { //checked 2019-06-04\r\n\tif (title === null) title = `concat(t.category,' ',t.gender,' - ',t.country,t.number)`;\r\n\telse if (title === false) title = `concat(t.category,' ',t.gender,' - ',t.country,t.number)`;\r\n\telse title = `${con.escape(title)}`;\r\n\r\n\tif (userId === null) userId = '5daa0c58-655e-42f6-a316-842520624c22';\r\n\t// console.log(\"Medal in Broadcast\", type(medal));\r\n\tif (medal == 0 || medal == '0') {\r\n\t\tconsole.log(\"Setting Medal to Silver\")\r\n\t\tuserId = \"f98079ce-2839-4924-b813-a1dd94690e07\"\r\n\t}\r\n\tif (medal == 1 || medal == '1') {\r\n\t\tconsole.log(\"Setting Medal to Gold\")\r\n\t\tuserId = \"bb8b2756-f7ff-4200-a5e0-b7d7ca879b34\"\r\n\t}\r\n\tlet query = `insert into post \r\n\t\t\tselect 0 as post_id, ${title}, ${con.escape(content)} as post,t.team_id,${con.escape(userId)} as poster_username,current_timestamp as time_stamp, sha1(concat(${con.escape(title)},${con.escape(content)},current_timestamp)) as social_hash, ${allowComments} as comments_allowed\r\n\t\t\tfrom team as t\r\n\t\t\twhere t.team_id=${con.escape(teamid)}`;\t\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n\r\n"},{"filename":"schedule-db.js","title":"getUserScheduleDB(userId)","query":"\r\n\r\nselect * from ((select distinct g.date, g.time as start, c.category, concat(c.category,' ',t.sport,' ',g.type) as title, concat(t1.country,t1.number,' vs. ',t2.country,t2.number,' | ',g.location,' | ',time_format(g.time, '%h:%i %p')) as subtitle, if(t.sport = 'Dodgeball', 24,47) as duration from gameoptions as g\r\n\tjoin scheduleoptions using(schedule_key)\r\n    join team as t1 on g.team1_id=t1.team_id\r\n\tjoin team as t2 on g.team2_id=t2.team_id\r\n\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\tjoin colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\tleft join subscribe as s1 on s1.team_id=t1.team_id\r\n\tleft join subscribe as s2 on s2.team_id=t2.team_id\r\n\twhere (s1.username=${con.escape(userId)} or s2.username=${con.escape(userId)}) and g.status not in ('DELETED','HIDDEN')  and g.location <> 'Clipboard' and published = 1)\r\n\tUNION\r\n\t(select \r\n\t\tdistinct es.date, \r\n\t\tes.time as start, \r\n\t\t'SpecialEvent', \r\n\t\tes.title, \r\n\t\tconcat(es.location,' | ',time_format(es.time, '%h:%i %p')) as subtitle, \r\n\t\tes.duration \r\n\tfrom eventsetup as es\r\n\tjoin eventparticipation as ep on es.event_id = ep.event_id\r\n\tjoin tournament as t on concat(t.category,' ',t.gender) = concat(ep.category,' ',ep.gender)\r\n\tjoin team as tm on concat(t.category,' ',t.gender) = concat(tm.category,' ',tm.gender)\r\n\tjoin subscribe as s on s.team_id=tm.team_id\r\n\twhere s.username=${con.escape(userId)})\r\n\tUNION\r\n\t(select g.date, g.time as start, concat(t.category,' ',t.gender) as category, concat(t.category,' ',t.gender,' ',t.sport,' ',g.type) as title, concat(g.location,' | ',time_format(g.time, '%h:%i %p')) as subtitle, 47 as duration from tournament as t\r\n\tjoin gameoptions as g on t.tournament_id = g.tournament_id\r\n    join scheduleoptions using(schedule_key)\r\n\twhere published = 1 and concat(t.category,' ',t.gender) in\r\n\t(select distinct concat(t.category,' ',t.gender) as catgenkey from subscribe as s\r\n\tjoin team as t on s.team_id = t.team_id\r\n\twhere s.username = ${con.escape(userId)})\r\n\tand g.team1_id is NULL and g.status not in ('DELETED','HIDDEN') and g.location <> 'Clipboard'\r\n\tgroup by g.date, g.time, concat(t.category,' ',t.gender))\r\n\torder by date, start) a\r\n\tLEFT JOIN \r\n\t(select category, background as color, text as textColor from colorchart) b\r\n\ton a.category = b.category"},{"filename":"schedule-db.js","title":"getDoubleBooked()","query":"\r\n\t\tselect \r\n\t\t\tdate_format(g.date, '%W, %m/%d') as displaydate,\r\n\t\t\tg.date,\r\n\t\t\tg.time,\r\n\t\t\tdate_format(g.time, '%h:%i %p') as displaytime,\r\n\t\t\tt.team_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' ',t.country,t.number) as team, \r\n\t\t\tgroup_concat(g.game_id order by g.game_id) as game_ids,\r\n\t\t\tcount(*) as count\r\n\t\tfrom game as g\r\n\t\tjoin team as t on g.team1_id = t.team_id or g.team2_id = t.team_id\r\n\t\twhere g.status <> 'DELETED'\r\n\t\tgroup by g.date, g.time, t.team_id\r\n\t\thaving count > 1;\r\n\r\n\t\tselect \r\n\t\t\tdate_format(g.date, '%W, %m/%d') as displaydate,\r\n\t\t\tg.date,\r\n\t\t\tg.time,\r\n\t\t\tdate_format(g.time, '%h:%i %p') as displaytime,\r\n\t\t\tg.location,\r\n\t\t\tl.location_id,\r\n\t\t\tlower(t.sport) as sport,\r\n\t\t\tconcat(t1.category,' ',t1.gender,' ',t1.country,' ',t1.number) as team1,\r\n\t\t\tconcat(t2.category,' ',t2.gender,' ',t2.country,' ',t2.number) as team2,\r\n\t\t\tcc.background,\r\n\t\t\tcc.text,\r\n\t\t\tcc.bold,\r\n\t\t\tg.game_id\r\n\t\tfrom game as g\r\n\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\tjoin colorchart as cc on concat(t.category,' ',t.gender) = cc.category\r\n\t\tjoin location as l on t.sport=l.sport and g.location=l.location_name\r\n\t\tjoin (select date, time, location, count(*) as count from game\r\n\t\twhere status <> 'DELETED' and location <> 'Tennis Courts'\r\n\t\tgroup by date, time, location\r\n\t\thaving count > 1) as d using(date,time,location);\r\n\r\n\t\tselect * from dismissed_double_booked_locations;\r\n\r\n\t\tselect * from dismissed_double_booked_teams;\r\n\t"},{"filename":"schedule-db.js","title":"updateDoubleBookedLocations(info, gameIDs, username)","query":"\r\n\t\tinsert into dismissed_double_booked_locations values ( \r\n\t\t\t${con.escape(info.date)},\r\n\t\t\t${con.escape(info.time)},\r\n\t\t\t${con.escape(info.title)},\r\n\t\t\t${con.escape(gameIDs)}, \r\n\t\t\t${con.escape(username)} \r\n\t\t)"},{"filename":"schedule-db.js","title":"updateDoubleBookedTeams(info, gameIDs, username)","query":"\r\n\t\tinsert into dismissed_double_booked_teams values (\r\n\t\t\t${con.escape(info.date)},\r\n\t\t\t${con.escape(info.time)},\r\n\t\t\t${con.escape(info.team_id)},\r\n\t\t\t${con.escape(gameIDs)},\r\n\t\t\t${con.escape(username)}\r\n\t\t)"},{"filename":"schedule-db.js","title":"getScheduleDates()","query":"\r\n\t\tselect distinct date_format(date,'%a, %b-%d') as date, date as rawDate from datetime order by datetime.date\r\n\t"},{"filename":"schedule-db.js","title":"masterSchedule()","query":"\r\n\t\tselect g.game_id, date_format(g.date,'%a, %b-%d') as date, t.tournament_id as tournament_id, g.time, c.category, c.background, c.text as textcolor, c.bold, t.sport, g.location, if(g.team1_id is not NULL, concat(if(g.type <> 'Round - 1', concat(left(g.type,1),': ') ,''),t1.country,t1.number,' vs. ',t2.country,t2.number,' ',g.game_id), concat(left(g.type,1),': ',t.sport,' ',g.game_id)) as text, if(g.status in ('PENDING','HIDDEN'), 0, if(g.status = 'Tournament' and concat(g.date,' ',g.time) >= CONVERT_TZ( NOW(),'GMT', 'US/Eastern'), 0, 1)) as strike from game as g\r\n\t\tleft join team as t1 on g.team1_id=t1.team_id\r\n\t\tleft join team as t2 on g.team2_id=t2.team_id\r\n\t\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\t\tjoin colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\t\twhere status <> 'DELETED' and location <> 'Clipboard'\r\n\t\torder by g.date, time\r\n\t"},{"filename":"schedule-db.js","title":"times()","query":"select distinct time from datetime order by time"},{"filename":"schedule-db.js","title":"activeSchedule(userId)","query":"\r\n\t\tselect \r\n\t\t\tg.game_id, \r\n\t\t\tdate_format(g.date,'%a, %b-%d') as date, \r\n\t\t\tt.tournament_id as tournament_id, \r\n\t\t\tg.time, \r\n\t\t\tc.category, \r\n\t\t\tc.background, \r\n\t\t\tc.text as textcolor,\r\n\t\t\tc.bold, \r\n\t\t\tt.sport, \r\n\t\t\tg.location, \r\n\t\t\tif(g.team1_id is not NULL, \r\n\t\t\tconcat(if(g.type <> 'Round - 1', concat(left(g.type,1),': ') ,''),t1.country,t1.number,' vs. ',t2.country,t2.number,' ',g.game_id), concat(left(g.type,1),': ',t.sport,' ',g.game_id)) as text, if(g.status in ('PENDING','HIDDEN'), 0, if(g.status = 'Tournament' and concat(g.date,' ',g.time) >= CONVERT_TZ( NOW(),'GMT', 'US/Eastern'), 0, 1)) as strike \r\n\t\tfrom gameoptions as g\r\n\t\tjoin defaultschedule as def on def.schedule_key = g.schedule_key\r\n\t\tleft join teamoptions as t1 on g.team1_id=t1.team_id and def.schedule_key = t1.schedule_key\r\n\t\tleft join teamoptions as t2 on g.team2_id=t2.team_id and def.schedule_key = t2.schedule_key\r\n\t\tjoin tournamentoptions as t on t.tournament_id=g.tournament_id and def.schedule_key = t.schedule_key\r\n\t\tjoin colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\t\twhere \r\n\t\t\tstatus <> 'DELETED'  and location <> 'Clipboard' and def.username = ${con.escape(userId)}\r\n\t\torder by g.date asc;\r\n    "},{"filename":"schedule-db.js","title":"allSchedules()","query":"\r\n\t\tselect \r\n\t\t\tt.schedule_key,\r\n\t\t\tg.game_id, \r\n\t\t\tdate_format(g.date,'%a, %b-%d') as formatdate,\r\n\t\t\tg.date as rawdate, \r\n\t\t\tt.tournament_id as tournament_id, \r\n\t\t\tg.time, \r\n\t\t\tc.category, \r\n\t\t\tc.background, \r\n\t\t\tc.text as textcolor, \r\n\t\t\tc.bold, \r\n\t\t\tt.sport, \r\n\t\t\tg.location, \r\n\t\t\tif(g.team1_id is not NULL, \r\n\t\t\tconcat(if(g.type <> 'Round - 1', concat(left(g.type,1),': ') ,''),t1.country,t1.number,' vs. ',t2.country,t2.number,' ',g.game_id), concat(left(g.type,1),': ',t.sport,' ',g.game_id)) as text, if(g.status in ('PENDING','HIDDEN'), 0, if(g.status = 'Tournament' and concat(g.date,' ',g.time) >= CONVERT_TZ( NOW(),'GMT', 'US/Eastern'), 0, 1)) as strike,\r\n\t\t\tt1.team_id as team1_id,\r\n\t\t\tt2.team_id as team2_id\r\n\t\tfrom gameoptions as g\r\n\t\tleft join teamoptions as t1 on g.team1_id=t1.team_id and t1.schedule_key = g.schedule_key\r\n\t\tleft join teamoptions as t2 on g.team2_id=t2.team_id and t2.schedule_key = g.schedule_key\r\n\t\tjoin tournamentoptions as t on t.tournament_id=g.tournament_id and t.schedule_key = g.schedule_key\r\n\t\tjoin colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\t\twhere \r\n\t\t\tstatus <> 'DELETED'\r\n\t\torder by g.date asc\r\n    "},{"filename":"schedule-db.js","title":"updateDefaultSchedule(username, version)","query":"\t\r\n\t\treplace into defaultschedule\r\n\t\tset \r\n\t\t\tusername = ${con.escape(username)}, \r\n\t\t\tschedule_key = ${con.escape(version)};"},{"filename":"schedule-db.js","title":"publishSchedule(username)","query":"\r\n\t\tupdate scheduleoptions\r\n\t\tset published = 0 where true;\r\n\t\t\r\n\t\tupdate scheduleoptions\r\n\t\tset published = 1 where schedule_key = (select schedule_key\r\n\t\t\t\t\tfrom defaultschedule\r\n\t\t\t\t\twhere username=${con.escape(username)});\r\n\t\t\r\n\t\tdelete from tournament where true;\r\n\t\tinsert into tournament\r\n\t\tselect \r\n\t\t\ttournament_id, \r\n\t\t\tcategory, \r\n\t\t\tgender, \r\n\t\t\tsport, \r\n\t\t\tqual_number \r\n\t\tfrom tournamentoptions\r\n\t\twhere schedule_key = (select schedule_key\r\n\t\t\t\t\tfrom defaultschedule\r\n\t\t\t\t\twhere username=${con.escape(username)});\r\n\t\t\r\n\t\tdelete from team \r\n\t\twhere team_id >= 20;\r\n\t\tinsert into team\r\n\t\tselect \r\n\t\t\tteam_id,\r\n\t\t\tcategory,\r\n\t\t\tgender,\r\n\t\t\tcountry,\r\n\t\t\tnumber,\r\n\t\t\tnotes\r\n\t\tfrom teamoptions\r\n\t\twhere schedule_key = (select schedule_key\r\n\t\t\t\t\tfrom defaultschedule\r\n\t\t\t\t\twhere username=${con.escape(username)});\r\n\t\t\r\n\t\tdelete from pool where true;\r\n\t\tinsert into pool\r\n\t\tselect \r\n\t\t\ttournament_id,\r\n\t\t\tteam_id,\r\n\t\t\tpool\r\n\t\tfrom pooloptions\r\n\t\twhere schedule_key = (select schedule_key\r\n\t\t\t\t\tfrom defaultschedule\r\n\t\t\t\t\twhere username=${con.escape(username)});\r\n\t\t\r\n\t\tdelete from game where true;\r\n\t\tinsert into game\r\n\t\tselect \r\n\t\t\tgame_id,\r\n\t\t\ttournament_id,\r\n\t\t\tstatus,\r\n\t\t\tdate,\r\n\t\t\ttime,\r\n\t\t\tlocation,\r\n\t\t\tteam1_id,\r\n\t\t\tteam2_id,\r\n\t\t\ttype\r\n\t\tfrom gameoptions\r\n\t\twhere schedule_key = (select schedule_key\r\n\t\t\t\t\tfrom defaultschedule\r\n\t\t\t\t\twhere username=${con.escape(username)});\r\n\t"},{"filename":"schedule-db.js","title":"unpublishSchedule(username)","query":"\r\n\tupdate scheduleoptions\r\n\tset published = 0 where true;\r\n\t\r\n\tdelete from tournament where true;\r\n\t\r\n\tdelete from team where team_id >= 20;\r\n\r\n\tdelete from pool where true;\r\n\t\r\n\tdelete from game where true;\r\n\t"},{"filename":"schedule-db.js","title":"getScheduleVersions()","query":"select so.* from scheduleoptions as so\r\n\t\t\t\t\t\tjoin gameoptions as go using(schedule_key)\r\n\t\t\t\t\t\tgroup by schedule_key\r\n\t\t\t\t\t\torder by schedule_key desc"},{"filename":"schedule-db.js","title":"getDefaultSchedule(username)","query":"\r\n\t\tselect \r\n\t\t\tds.schedule_key,\r\n\t\t\tso.published\r\n\t\tfrom defaultschedule as ds\r\n\t\tjoin scheduleoptions as so\r\n\t\tusing (schedule_key)\r\n\t\twhere username=${con.escape(username)};\r\n\t"},{"filename":"schedule-db.js","title":"getAllLocations()","query":"\r\n\t\tselect\r\n\t\t\tlocation_name as location,\r\n\t\t\tsport\r\n\t\tfrom location\r\n\t\twhere location_name <> \"-\"\r\n\t\t"},{"filename":"schedule-db.js","title":"createGame(game)","query":"insert into gameoptions values(\r\n\t\t${con.escape(game.schedule_key)},\r\n\t\t0,\r\n\t\t${con.escape(game.tournament_id)},\r\n\t\t'PENDING',\r\n\t\t${con.escape(game.date)},\r\n\t\t${con.escape(game.time)},\r\n\t\t${con.escape(game.location)},\r\n\t\t${con.escape(game.team1_id)},\r\n\t\t${con.escape(game.team2_id)},\r\n\t\t${con.escape(game.gameType)}\r\n\t\t)"},{"filename":"schedule-db.js","title":"deleteGame(gameID, schedule_key)","query":"\r\n\t\tupdate gameoptions\r\n\t\tset status = 'DELETED'\r\n\t\twhere schedule_key=${con.escape(schedule_key)} and game_id=${con.escape(gameID)}\r\n\t\t"},{"filename":"schedule-db.js","title":"moveGame(game)","query":"\r\n\t\tupdate gameoptions as g\r\n\t\tset g.date = ${con.escape(game.date)}, g.time = ${con.escape(game.time)},\r\n\t\tg.location = ${con.escape(game.location)}\r\n\t\twhere schedule_key=${con.escape(game.schedule_key)} and game_id=${con.escape(game.gameId)}\r\n\t\t"},{"filename":"schedule-db.js","title":"addToGameChangeLog(obj)","query":"\r\n\t\tinsert into gameoptionschangelog \r\n\t\t\t(schedule_key,\r\n\t\t\tchange_id,\r\n\t\t\tgame_id,\r\n\t\t\tdate,\r\n\t\t\ttime,\r\n\t\t\tlocation,\r\n\t\t\ttimestamp,\r\n\t\t\treason,\r\n\t\t\tchange_type,\r\n\t\t\tusername) \r\n\t\tvalues (\r\n\t\t\t${con.escape(obj.schedule_key)},\r\n\t\t\t0,\r\n\t\t\t${con.escape(obj.game_id)},\r\n\t\t\t${con.escape(obj.date)},\r\n\t\t\t${con.escape(obj.time)},\r\n\t\t\t${con.escape(obj.location)},\r\n\t\t\tcurrent_timestamp(),\r\n\t\t\t${con.escape(obj.reason)},\r\n\t\t\t${con.escape(obj.change_type)},\r\n\t\t\t${con.escape(obj.username)});\r\n\t"},{"filename":"schedule-db.js","title":"getDaySchedule(date)","query":"\r\n    select g.game_id, g.date, g.time, c.category, c.background, c.text as textcolor, c.bold, t.sport, g.location, concat(t1.country,t1.number,' vs. ',t2.country,t2.number,' ',g.game_id) as text, t1.country as country1, t2.country as country2 from game as g\r\n    join team as t1 on g.team1_id = t1.team_id\r\n    join team as t2 on g.team2_id = t2.team_id\r\n    join tournament as t on g.tournament_id = t.tournament_id\r\n    join colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\twhere date = ${con.escape(date)} and g.status not in ('DELETED','HIDDEN')  and location <> 'Clipboard'\r\n\t\r\n    order by date, time, g.location\r\n    "},{"filename":"schedule-db.js","title":"refScheduleDB(userId)","query":"\r\n\t\tselect \r\n\t\t\tsport,\r\n\t\t\tdate_format(date, '%a, %b-%d') as date,\r\n\t\t\ttime_format(time, '%l:%i %p') as time,\r\n\t\t\tlocation,\r\n\t\t\ttype,\r\n\t\t\tconcat(t.category,' ',t.gender) as cat_gender,\r\n\t\t\tconcat(t1.country,t1.number,' vs. ',t2.country,t2.number) as teams\r\n\t\tfrom game as g\r\n\t\tjoin tournament as t using(tournament_id)\r\n\t\tjoin referee as ref using(sport)\r\n\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\twhere status <> 'DELETED'\r\n\t\tand location <> 'Clipboard'\r\n\t\tand username = ${con.escape(userId)}\r\n\t\torder by g.date, g.time, sport, location\r\n\t"},{"filename":"schedule-db.js","title":"getallScheduleChangesStaffSiteDirectors()","query":"select distinct date_format(gc.timestamp,'%a, %b-%d') as change_made, gc.change_id, g.game_id, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type <> 'Round - 1',concat(' ',g.type),'')) as tournament, concat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams, if(gc.old_date = '0000-00-00','-',date_format(gc.old_date,'%a, %b-%d')) as old_date, if(gc.old_time = '00:00:00','-',date_format(gc.old_time,'%l:%i %p')) as old_time, gc.old_location, if(gc.new_date = '0000-00-00','-',date_format(gc.new_date,'%a, %b-%d')) as new_date, if(gc.new_time= '00:00:00','-',date_format(gc.new_time,'%l:%i %p')) as new_time, gc.new_location, gc.change_type from gamechange as gc\r\n\t\t\t\t\tjoin game as g on g.game_id=gc.game_id\r\n\t\t\t\t\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\t\t\t\t\tjoin team as t1 on g.team1_id=t1.team_id\r\n\t\t\t\t\tjoin team as t2 on g.team2_id=t2.team_id\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tUNION\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tselect date_format(gc.timestamp,'%a, %b-%d') as change_made, gc.change_id, g.game_id, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type <> 'Round - 1',concat(' ',g.type),'')) as tournament, 'TBD' as teams, if(gc.old_date = '0000-00-00','-',date_format(gc.old_date,'%a, %b-%d')) as old_date, if(gc.old_time = '00:00:00','-',date_format(gc.old_time,'%l:%i %p')) as old_time, gc.old_location, if(gc.new_date = '0000-00-00','-',date_format(gc.new_date,'%a, %b-%d')) as new_date, if(gc.new_time= '00:00:00','-',date_format(gc.new_time,'%l:%i %p')) as new_time, gc.new_location, gc.change_type from gamechange as gc\r\n\t\t\t\t\tjoin game as g on gc.game_id = g.game_id\r\n\t\t\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\t\t\twhere g.team1_id is null\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\torder by change_id desc"},{"filename":"schedule-db.js","title":"getallScheduleChangesAdmin()","query":"select distinct date_format(gc.timestamp,'%a, %b-%d') as change_made, gc.change_id, g.game_id, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type <> 'Round - 1',concat(' ',g.type),'')) as tournament, concat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams, if(gc.old_date = '0000-00-00','-',date_format(gc.old_date,'%a, %b-%d')) as old_date, if(gc.old_time = '00:00:00','-',date_format(gc.old_time,'%l:%i %p')) as old_time, gc.old_location, if(gc.new_date = '0000-00-00','-',date_format(gc.new_date,'%a, %b-%d')) as new_date, if(gc.new_time= '00:00:00','-',date_format(gc.new_time,'%l:%i %p')) as new_time, gc.new_location, gc.change_type, gc.reason from gamechange as gc\r\n\t\t\t\t\tjoin game as g on g.game_id=gc.game_id\r\n\t\t\t\t\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\t\t\t\t\tjoin team as t1 on g.team1_id=t1.team_id\r\n\t\t\t\t\tjoin team as t2 on g.team2_id=t2.team_id\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tUNION\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tselect date_format(gc.timestamp,'%a, %b-%d') as change_made, gc.change_id, g.game_id, concat(t.category,' ',t.gender,' - ',t.sport,if(g.type <> 'Round - 1',concat(' ',g.type),'')) as tournament, 'TBD' as teams, if(gc.old_date = '0000-00-00','-',date_format(gc.old_date,'%a, %b-%d')) as old_date, if(gc.old_time = '00:00:00','-',date_format(gc.old_time,'%l:%i %p')) as old_time, gc.old_location, if(gc.new_date = '0000-00-00','-',date_format(gc.new_date,'%a, %b-%d')) as new_date, if(gc.new_time= '00:00:00','-',date_format(gc.new_time,'%l:%i %p')) as new_time, gc.new_location, gc.change_type, gc.reason from gamechange as gc\r\n\t\t\t\t\tjoin game as g on gc.game_id = g.game_id\r\n\t\t\t\t\tjoin tournament as t on g.tournament_id = t.tournament_id\r\n\t\t\t\t\twhere g.team1_id is null\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\torder by change_id desc"},{"filename":"schedule-db.js","title":"teamSchedule(version, table)","query":"\r\n\tSELECT team_id, CONCAT(category, ' ', gender, (CASE country WHEN '' THEN '' ELSE ' ' END), country, number) as title FROM teamoptions WHERE category != 'Internal' and schedule_key = ${con.escape(version)} order by title;\r\n\t\r\n\tselect * from (\r\n\tselect \r\n\t\tg.schedule_key as scheduleVersion, \r\n\t\tt.team_id,\r\n\t\tg.game_id, \r\n\t\tdate_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start, \r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end, \r\n\t\tg.location, concat(t0.sport,if(g.type <> 'Round - 1',concat(' ',g.type),''),' in ',g.location,' (',t1.country,t1.number,'-',t2.country,t2.number,')') as text,\r\n\t\t'normal' as type, \r\n\t\tcc.background, \r\n\t\tcc.text as textColor, \r\n\t\tcc.bold\r\n\tfrom ${table ? 'gameoptions' : 'pregameoptions'} as g\r\n\tjoin teamoptions as t on (g.team1_id = t.team_id or g.team2_id = t.team_id) and t.schedule_key = g.schedule_key\r\n\tjoin teamoptions as t1 on g.team1_id = t1.team_id and t1.schedule_key = g.schedule_key\r\n\tjoin teamoptions as t2 on g.team2_id = t2.team_id and t2.schedule_key = g.schedule_key\r\n\tjoin colorchart as cc on cc.category = concat(t.category,' ', t.gender)\r\n\tjoin tournamentoptions as t0 on g.tournament_id=t0.tournament_id and t0.schedule_key = g.schedule_key\r\n\twhere team1_id is not null and g.status <> 'DELETED' and g.schedule_key = ${con.escape(version)}\r\n\tUNION\r\n\tselect\r\n\t\tg.schedule_key as scheduleVersion,\r\n\t\ttm.team_id,\r\n\t\tg.game_id,\r\n\t\tdate_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start,\r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end,\r\n\t\tg.location,\r\n\t\tconcat(t0.sport,' ',g.type,' in ',g.location) as text,\r\n\t\t'normal' as type,\r\n\t\tcc.background as background,\r\n\t\tcc.text as textColor,\r\n\t\tcc.bold as bold\r\n\tfrom ${table ? 'gameoptions' : 'pregameoptions'} as g\r\n\tjoin tournamentoptions as t0 using(tournament_id, schedule_key)\r\n\tjoin teamoptions as tm using(category,gender,schedule_key)\r\n\tjoin colorchart as cc on cc.category = concat(tm.category,' ',tm.gender)\r\n\twhere team1_id is null and g.status <> 'DELETED' and g.location <> 'Clipboard' and g.schedule_key = ${con.escape(version)}\r\n\tgroup by date, start, cc.category, tm.team_id\r\n\tUNION\r\n\tselect \r\n\t\t${con.escape(version)}, \r\n\t\tt.team_id, \r\n\t\tes.event_id, \r\n\t\tdate_add(TIMESTAMP(es.date, es.time), interval 5 hour) as start, \r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(es.date, es.time), '00:50:00'), interval 5 hour) as end, \r\n\t\tes.location, concat(es.title,' @ ',es.location) as text, \r\n\t\t'special' as type,\r\n\t\t'#FFFFFF' as background, \r\n\t\t'#000000' as textColor, \r\n\t\t0 as bold\r\n\tfrom eventsetup as es\r\n\tjoin eventparticipation as ep on ep.event_id = es.event_id\r\n\tjoin teamoptions as t on concat(t.category,t.gender) = concat(ep.category,ep.gender)\r\n\twhere t.schedule_key = ${con.escape(version)}) as first\r\n    join teamnotes as tn on first.team_id = tn.id\r\n    order by tn.name, type;\r\n\tSELECT min(date) as sday, max(date) as eday, min(time) as stime, DATE_ADD(max(time), INTERVAL 50 MINUTE) as etime FROM datetime;\r\n\t"},{"filename":"schedule-db.js","title":"getMultipleTeamSchedule(team)","query":"\r\n\tSELECT team_id, CONCAT(category, ' ', gender, (CASE country WHEN '' THEN '' ELSE ' ' END), country, number) as title FROM team WHERE category != 'Internal';\r\n\tselect \r\n\t\tt.team_id,\r\n\t\tg.game_id, \r\n\t\tdate_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start, \r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end, \r\n\t\tg.location, concat(t0.sport,if(g.type <> 'Round - 1',concat(' ',g.type),''),' in ',g.location,' (',t1.country,t1.number,'-',t2.country,t2.number,')') as text,\r\n\t\t'normal' as type, \r\n\t\tcc.background, \r\n\t\tcc.text as textColor, \r\n\t\tcc.bold\r\n\tfrom game as g\r\n\tjoin team as t on (g.team1_id = t.team_id or g.team2_id = t.team_id)\r\n\tjoin team as t1 on g.team1_id = t1.team_id\r\n\tjoin team as t2 on g.team2_id = t2.team_id\r\n\tjoin colorchart as cc on cc.category = concat(t.category,' ', t.gender)\r\n\tjoin tournament as t0 on g.tournament_id=t0.tournament_id\r\n\twhere team1_id is not null and g.status not in ('DELETED','HIDDEN') and t.team_id in (${team})\r\n\tUNION\r\n\tselect\r\n\t\ttm.team_id,\r\n\t\tg.game_id,\r\n\t\tdate_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start,\r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end,\r\n\t\tg.location,\r\n\t\tconcat(t0.sport,' ',g.type,' in ',g.location) as text,\r\n\t\t'normal' as type,\r\n\t\tcc.background as background,\r\n\t\tcc.text as textColor,\r\n\t\tcc.bold as bold\r\n\tfrom game as g\r\n\tjoin tournament as t0 using(tournament_id)\r\n\tjoin team as tm using(category,gender)\r\n\tjoin colorchart as cc on cc.category = concat(tm.category,' ',tm.gender)\r\n\twhere team1_id is null and g.status not in ('DELETED','HIDDEN') and g.location <> 'Clipboard' and tm.team_id in (${team})\r\n\tgroup by date, start, cc.category, tm.team_id\r\n\tUNION\r\n\tselect\r\n\t\tt.team_id, \r\n\t\tes.event_id, \r\n\t\tdate_add(TIMESTAMP(es.date, es.time), interval 5 hour) as start, \r\n\t\tdate_add(TIMESTAMP(TIMESTAMP(es.date, es.time), '00:50:00'), interval 5 hour) as end, \r\n\t\tes.location, concat(es.title,' @ ',es.location) as text, \r\n\t\t'special' as type,\r\n\t\t'#FFFFFF' as background, \r\n\t\t'#000000' as textColor, \r\n\t\t0 as bold\r\n\tfrom eventsetup as es\r\n\tjoin eventparticipation as ep on ep.event_id = es.event_id\r\n\tjoin team as t on concat(t.category,t.gender) = concat(ep.category,ep.gender)\r\n\twhere t.team_id in (${team})\r\n\torder by start, location;\r\n\tSELECT min(date) as sday, max(date) as eday, min(time) as stime, DATE_ADD(max(time), INTERVAL 50 MINUTE) as etime FROM datetime;\r\n\t"},{"filename":"schedule-db.js","title":"getDates()","query":"select date_format(date,'%a, %b-%d') as date, time_format(time,'%l:%i %p') as time from datetime\r\n\t\t\t\t\torder by date, time"},{"filename":"schedule-db.js","title":"getDistinctTimes()","query":"select distinct time from datetime"},{"filename":"schedule-db.js","title":"getTeamColor(category)","query":"\r\n\t\tselect * from colorchart where category = ${con.escape(category)};\r\n\t"},{"filename":"schedule-db.js","title":"getMasterScheduleDB()","query":"select g.game_id, date_format(g.date,'%a, %b-%d') as date, t.tournament_id as tournament_id, g.time, c.category, c.background, c.text as textcolor, c.bold, t.sport, g.location, if(g.team1_id is not NULL, concat(if(g.type <> 'Round - 1', concat(left(g.type,1),': ') ,''),t1.country,t1.number,' vs. ',t2.country,t2.number,' ',g.game_id), concat(left(g.type,1),': ',t.sport,' ',g.game_id)) as title, if(g.status in ('PENDING','HIDDEN'), 0, if(g.status = 'Tournament' and concat(g.date,' ',g.time) >= CONVERT_TZ( NOW(),'GMT', 'US/Eastern'), 0, 1)) as strike from game as g\r\n\tleft join team as t1 on g.team1_id=t1.team_id\r\n\tleft join team as t2 on g.team2_id=t2.team_id\r\n\tjoin tournament as t on t.tournament_id=g.tournament_id\r\n\tjoin colorchart as c on c.category = concat(t.category,' ',t.gender)\r\n\twhere status <> 'DELETED'  and g.location <> 'Clipboard'\r\n\torder by date, time"},{"filename":"schedule-db.js","title":"getInitTeamSchedulesDB(uid)","query":"\r\n\tSELECT team_id, CONCAT(category, ' ', gender, (CASE country WHEN '' THEN '' ELSE ' ' END), country, number) as title FROM team WHERE category != 'Internal';\r\n    select s.team_id,g.game_id, date_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start, date_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end, g.location, concat(t0.sport,if(g.type <> 'Round - 1',concat(' ',g.type),''),' in ',g.location,' (',t1.country,t1.number,'-',t2.country,t2.number,')') as text,\r\n        'normal' as type\r\n        from game as g\r\n        left join team as t1 on t1.team_id=g.team1_id\r\n        left join team as t2 on t2.team_id=g.team2_id\r\n        join tournament as t0 on g.tournament_id=t0.tournament_id\r\n        join subscribe as s on s.team_id = t1.team_id or s.team_id = t2.team_id\r\n        where s.username = ${con.escape(uid)}\r\n        and g.status <> 'DELETED'  and g.location <> 'Clipboard'\r\n    UNION\r\n        select s.team_id, g.game_id, date_add(TIMESTAMP(g.date, g.time), interval 5 hour) as start, date_add(TIMESTAMP(TIMESTAMP(g.date, g.time), '00:50:00'), interval 5 hour) as end, g.location, concat(t.sport,' ',g.type,' in ',g.location) as text, 'normal' as type\r\n        from tournament as t\r\n        join game as g on t.tournament_id = g.tournament_id\r\n        join team as tm on concat(t.category,' ',t.gender) = concat(tm.category,' ',tm.gender)\r\n        join subscribe as s on tm.team_id = s.team_id\r\n        where s.username = ${con.escape(uid)}\r\n        and g.team1_id is NULL\r\n        and g.status <> 'DELETED' and g.location <> 'Clipboard'\r\n        group by g.date, t.category\r\n    UNION\r\n        select s.team_id, es.event_id, date_add(TIMESTAMP(es.date, es.time), interval 5 hour) as start, date_add(TIMESTAMP(TIMESTAMP(es.date, es.time), '00:50:00'), interval 5 hour) as end, es.location, concat(es.title,' @ ',es.location) as text, 'special' as type\r\n        from eventsetup as es\r\n        join eventparticipation as ep on ep.event_id = es.event_id\r\n        join team as t on concat(t.category,t.gender) = concat(ep.category,ep.gender)\r\n        join subscribe as s on t.team_id = s.team_id\r\n        where s.username = ${con.escape(uid)}\r\n        order by start, location;\r\n    SELECT min(date) as sday, max(date) as eday, min(time) as stime, DATE_ADD(max(time), INTERVAL 50 MINUTE) as etime FROM datetime;\r\n\t\r\n\t"},{"filename":"schedule-db.js","title":"getTeamsInVersionDB()","query":""},{"filename":"schedule-db.js","title":"getPubCapCoRefScheduleChanges(userId, recent)","query":" async function getPubCapCoRefScheduleChanges(userId, recent) {\r\n\tconst timestamp_string = recent ? `lv.schedulechanges` : `'2021-11-14'`;\r\n\r\n\tconst query = `\r\nselect distinct\r\n\t\t\talias.change_id,\r\n\t\t\talias.game_id,\r\n\t\t\talias.type,\r\n\t\t\talias.date,\r\n\t\t\talias.time, \r\n\t\t\talias.location,\r\n\t\t\talias.catGender,\r\n\t\t\talias.sport,\r\n\t\t\talias.teams,\r\n\t\t\tdate_add(alias.timestamp, interval -5 hour) as timestamp_raw,\r\n\t\t\tdate_format(date_add(alias.timestamp, interval -5 hour),'%a, %b-%d @ %l:%i %p') as timestamp\r\n\t\tfrom (\r\n\t\t\tselect \r\n\t\t\t\tgc.change_id,\r\n\t\t\t\tg.game_id,\r\n\t\t\t\tg.type,\r\n\t\t\t\tdate_format(gc.date,'%a, %b-%d') as date, \r\n\t\t\t\tdate_format(gc.time,'%l:%i %p') as time, \r\n\t\t\t\tgc.location,\r\n\t\t\t\tconcat(t.category,' ',t.gender) as catGender,\r\n\t\t\t\tlower(t.sport) as sport,\r\n\t\t\t\tconcat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams,\r\n\t\t\t\tgc.timestamp\r\n\t\t\tfrom gameoptionschangelog as gc\r\n            join scheduleoptions as so using(schedule_key)\r\n\t\t\tjoin game as g on g.game_id = gc.game_id\r\n\t\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\t\twhere published = 1\r\n            \r\n\t\t\tunion\r\n\t\t\r\n\t\t\tselect\r\n\t\t\t\t9999 as change_id,\r\n\t\t\t\tg.game_id,\r\n\t\t\t\tg.type,\r\n\t\t\t\tdate_format(g.date,'%a, %b-%d') as date, \r\n\t\t\t\tdate_format(g.time,'%l:%i %p') as time, \r\n\t\t\t\tg.location,\r\n\t\t\t\tconcat(t.category,' ',t.gender) as catGender,\r\n\t\t\t\tlower(t.sport) as sport,\r\n\t\t\t\tconcat(t1.country,' ',t1.number,' vs. ',t2.country,' ',t2.number) as teams,\r\n\t\t\t\tcurrent_timestamp() as timestamp\r\n\t\t\tfrom game as g\r\n\t\t\tjoin gameoptionschangelog as gc using(game_id)\r\n            join scheduleoptions as so using(schedule_key)\r\n\t\t\tjoin tournament as t on t.tournament_id = g.tournament_id\r\n\t\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n            where published = 1) \r\n\t\tas alias\r\n\t\tjoin game as g using(game_id)\r\n\t\tleft join team as t1 on g.team1_id = t1.team_id\r\n\t\tleft join team as t2 on g.team2_id = t2.team_id\r\n\t\tleft join subscribe as s on s.team_id = t1.team_id or s.team_id = t2.team_id or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin subscribe as s on g.team1_id = s.team_id or g.team2_id = s.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere s.username = ${con.escape(userId)}))\r\n\t\tleft join coach as co on co.team_id = t1.team_id or co.team_id = t2.team_id or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin coach as co on g.team1_id = co.team_id or g.team2_id = co.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere co.username = ${con.escape(userId)}))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tleft join captain as ca on ca.country = t1.country or ca.country = t2.country or (t1.team_id is null and g.tournament_id in (select distinct tournament_id \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfrom tournament as t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin game as g using(tournament_id)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjoin captain as ca on t1.country = ca.country or t2.country = ca.country\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhere ca.username = ${con.escape(userId)}))\r\n\t\t\r\n\t\tleft join referee as ref on lower(ref.sport) = alias.sport\r\n\t\tleft join lastvisits as lv on lv.username = ${con.escape(userId)}\r\n\t\twhere \r\n\t\t\ttimestamp >= ${timestamp_string} and\r\n\t\t\t(s.username = ${con.escape(userId)} or \r\n\t\t\tco.username = ${con.escape(userId)} or\r\n\t\t\tca.username = ${con.escape(userId)} or\r\n\t\t\tref.username = ${con.escape(userId)})\r\n\t\torder by game_id, change_id desc;\r\n\t`;\r\n\t\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"standings-db.js","title":"masterStandings()","query":"\r\n\t\tcreate temporary table standingcards\r\n\t\tselect \r\n\t\t\tt.tournament_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament, \r\n\t\t\tif(s.pool = 'Pool 0', '', s.pool) as pool,\r\n\t\t\ts.team_id,\r\n\t\t\tconcat(tm.country,' ',tm.number) as team,\r\n\t\t\tconcat(tm.country,tm.number) as shirt,\r\n\t\t\ts.rank,\r\n\t\t\ts.wins,\r\n\t\t\ts.losses,\r\n\t\t\ts.ties,\r\n\t\t\ts.raw_points,\r\n\t\t\ts.h2h,\r\n\t\t\ts.pd,\r\n\t\t\ts.h2h2,\r\n\t\t\ts.gif,\r\n\t\t\ts.vbpd,\r\n\t\t\tif(qualify = 1, 'Yes', if(qualify = 0, 'No', '')) as qualify\r\n\t\tfrom standings as s\r\n\t\tjoin tournament as t on s.tournament_id = t.tournament_id\r\n\t\tjoin team as tm on s.team_id = tm.team_id\r\n\t\torder by tournament, pool, rank;\r\n\t\tselect * from standingcards;\r\n\t\tdrop table standingcards;"},{"filename":"standings-db.js","title":"myStandings(userId)","query":"\r\n\t\tset @userId = ${con.escape(userId)};\r\n\t\tcreate temporary table mytournaments\r\n\t\tselect distinct\r\n\t\t\tt.tournament_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament \r\n\t\tfrom tournament as t\r\n\t\tjoin pool as p on t.tournament_id = p.tournament_id\r\n\t\tjoin sport as sp on t.sport = sp.sport\r\n\t\tjoin subscribe as s on p.team_id = s.team_id\r\n\t\twhere \r\n\t\t\tsp.forfeit_score <> 0 and s.username = @userId\r\n\t\torder by tournament;\r\n\t\tcreate temporary table mystandingcards\r\n\t\tselect distinct\r\n\t\t\tt.tournament_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament, \r\n\t\t\tif(s.pool = 'Pool 0', '', s.pool) as pool,\r\n\t\t\ts.team_id,\r\n\t\t\tconcat(tm.country,' ',tm.number) as team,\r\n\t\t\tconcat(tm.country,tm.number) as shirt,\r\n\t\t\ts.rank,\r\n\t\t\ts.wins,\r\n\t\t\ts.losses,\r\n\t\t\ts.ties,\r\n\t\t\ts.raw_points,\r\n\t\t\ts.h2h,\r\n\t\t\ts.pd,\r\n\t\t\ts.h2h2,\r\n\t\t\ts.gif,\r\n\t\t\ts.final_points,\r\n\t\t\ts.vbpd,\r\n\t\t\tt.sport,\r\n\t\t\tif(qualify = 1, 'Yes', if(qualify = 0, 'No', '')) as qualify, \r\n\t\t\tm.color as medal,\r\n\t\t\tvbpd as 'VB PD',\r\n\t\t\tconcat(t.category, ' ', t.gender) as category\r\n\t\tfrom standings as s\r\n\t\tjoin tournament as t on s.tournament_id = t.tournament_id\r\n\t\tjoin team as tm on s.team_id = tm.team_id\r\n\t\tjoin mytournaments as mt on s.tournament_id = mt.tournament_id\r\n\t\tleft join medal as m on t.tournament_id = m.tournament_id and tm.team_id = m.team_id\r\n\t\torder by tournament, pool, rank;\r\n\t\tselect * from mystandingcards;\r\n\t\tdrop table mytournaments;\r\n\t\tdrop table mystandingcards;"},{"filename":"standings-db.js","title":"mobileMedalsMain()","query":"\r\n\tselect \r\n\t\tm.country, \r\n\t\tsum(case when color = 2 then 1 else 0 end) as gold, \r\n\t\tsum(case when color = 1 then 1 else 0 end) as silver, \r\n\t\tsum(case when (color = 2 and type = 'team') then 2.5 when (color = 2 and type = 'individual') then 1.0 else 0 end) + sum(case when (color = 1 and type = 'team') then 1.0 when (color = 1 and type = 'individual') then 0.4 else 0 end) as pts, \r\n\t\tround(((sum(case when (color = 2 and type = 'team') then 2.5 when (color = 2 and type = 'individual') then 1.0 else 0 end) + sum(case when (color = 1 and type = 'team') then 1.0 when (color = 1 and type = 'individual') then 0.4 else 0 end))/teamcount.count), 2) as weighted  \r\n\tfrom \r\n\t(select \r\n\t\tcountry, \r\n\t\tcolor, \r\n\t\t'team' as type \r\n\tfrom medal\r\n\tjoin team using(team_id)\r\n\tunion all\r\n\tselect \r\n\t\tcountry, \r\n\t\tcolor, \r\n\t\t'individual' as type \r\n\tfrom individualmedal) as m\r\n\tjoin (select country, count(*) as count from team as teamjoin group by country) as teamcount using(country)\r\n\tgroup by m.country\r\n\torder by pts desc, m.country;"},{"filename":"standings-db.js","title":"mobileMedalsSub()","query":"select \r\n\t\t\t\t\t\tt.country, \r\n\t\t\t\t\t\tm.medal_id, \r\n\t\t\t\t\t\tconcat(t.category,' ',t.gender,' ',t.country,' ',t.number) as teamLong, \r\n\t\t\t\t\t\tconcat(t.country,t.number) as teamShort, \r\n\t\t\t\t\t\tconcat(t0.category,' ',t0.gender,' ',t0.sport) as tournament, \r\n\t\t\t\t\t\tm.color from medal as m\r\n\t\t\t\t\tjoin tournament as t0 on m.tournament_id = t0.tournament_id\r\n\t\t\t\t\tjoin team as t on m.team_id = t.team_id\r\n\r\n\t\t\t\t\tunion all\r\n\r\n\t\t\t\t\tselect country, 0, 'teamLong', 'teamShort', title, color from individualmedal as im\r\n\t\t\t\t\tjoin eventsetup as es using(event_id)\r\n\r\n\t\t\t\t\torder by country, color, tournament;"},{"filename":"standings-db.js","title":"tiedTeams()","query":"select\r\n\t\tt0.tournament_id,\r\n\t\tt.team_id,\r\n\t\tpool,\r\n\t\tconcat(t0.category,' ',t0.sport) as tournament,\r\n\t\tconcat(t.category,' ',t.gender,' - ',t.country,' ',t.number) as team,\r\n\t\tfinal_points\r\n\tfrom standings as s\r\n\tjoin tournament as t0 using(tournament_id)\r\n\tjoin team as t using(team_id)\r\n\twhere (tournament_id, pool, final_points) in (\r\n\t#tied tournament-pool combinations\r\n\tselect tournament_id, pool, final_points from standings\r\n\tgroup by tournament_id, pool, final_points\r\n\thaving count(*) > 1 and (tournament_id, pool) not in (\r\n\t#pending tournaments-pool combinations\r\n\tselect\r\n\t\tt.tournament_id,\r\n\t\tp.pool\r\n\tfrom game as g\r\n\tjoin tournament as t using(tournament_id)\r\n\tjoin pool as p on t.tournament_id = p.tournament_id and g.team1_id = p.team_id\r\n\twhere type = 'Round - 1' and status = 'PENDING'\r\n\tgroup by t.tournament_id, p.pool));"},{"filename":"standings-db.js","title":"untieTeam(ranking, tournamentId, teamId, pool)","query":"\r\n\t\r\n\tinsert into untieteams\r\n\tvalues (${con.escape(tournamentId)}, ${con.escape(teamId)}, ${con.escape(pool)}, 5- ${con.escape(ranking)});\r\n\t"},{"filename":"subscription-db.js","title":"getSubscriptions(userId)","query":"select\r\n\t\t\t\t\t\tdistinct s.team_id,\r\n\t\t\t\t\t\tif( t.category not in ('Young' ),concat(t.category,' ',t.gender,' - ',t.country,t.number), concat(t.category,' ',t.gender)) as name,\r\n\t\t\t\t\t\tconcat(t.category,' ',t.gender) as cc_key,\r\n\t\t\t\t\t\tconcat(t.country,' ',t.number) as short,\r\n\t\t\t\t\t\tconcat(t.country,t.number) as shirt,\r\n\t\t\t\t\t\tcc.bold,\r\n\t\t\t\t\t\tcc.background,\r\n\t\t\t\t\t\tcc.text\r\n\t\t\t\t\tfrom subscribe as s\r\n\t\t\t\t\tjoin team as t on s.team_id = t.team_id\r\n\t\t\t\t\tjoin colorchart as cc on concat(t.category,' ',t.gender) = cc.category\r\n\t\t\t\t\twhere s.username = ${con.escape(userId)};"},{"filename":"subscription-db.js","title":"deleteSubscription(body)","query":"delete from subscribe where username = ${con.escape(body.userId)} and team_id = ${con.escape(body.teamId)}"},{"filename":"subscription-db.js","title":"addSubscription(body)","query":"insert into subscribe values(${con.escape(body.userId)},${con.escape(body.teamId)})"},{"filename":"tournament-db.js","title":"getAllTeams()","query":"\r\n\t\tselect\r\n\t\t\tt.team_id as id,\r\n\t\t\tt.country,\r\n\t\t\tconcat(t.category,' ',t.gender,\r\n\t\t\t\tif(t.country not in (''),' - ',''),\r\n\t\t\t\tt.country,' ',t.number) as team_name\r\n\t\tfrom team as t \r\n\t\twhere t.category not in ('Internal', 'Ch F')\r\n\t\torder by concat(t.category,' ',t.gender,' ',t.country,t.number) asc"},{"filename":"tournament-db.js","title":"getAllUsers()","query":"\r\n\t\tselect \r\n\t\t\tusername,\r\n\t\t\tconcat(first_name, ' ', last_name) as name\r\n\t\tfrom user\r\n\t\torder by name\r\n\t"},{"filename":"tournament-db.js","title":"getCategories()","query":"select distinct t.category, t.gender from team as t\r\n\t\t\t\t\t\t\t\twhere t.category not in ('Ch F','Internal')\r\n\t\t\t\t\t\t\t\torder by concat(t.category, t.gender) asc"},{"filename":"tournament-db.js","title":"getTeamsByCaptain(userId)","query":"select username, long_name, concat(t.category,' ',t.gender,' - ',t.country,t.number) as team_name, t.team_id from captain as cap\r\n\t\t\t\t\tjoin country as co on co.short_name = cap.country\r\n\t\t\t\t\tjoin team  as t on cap.country = t.country\r\n\t\t\t\t\twhere username = (select u.username from user as u where username = ${con.escape(userId)}) \r\n\t\t\t\t\torder by team_name"},{"filename":"tournament-db.js","title":"getTeamsByCoach(userId)","query":"select t.team_id, concat(t.category, ' ',t.gender,' - ',t.country,t.number) as team, co.long_name from coach as c\r\n\t\t\t\t\tjoin team as t on c.team_id = t.team_id\r\n\t\t\t\t\tjoin country as co on t.country = co.short_name\r\n\t\t\t\t\twhere c.username = (select u.username from user as u where username = ${con.escape(userId)})\r\n\t\t\t\t\torder by team"},{"filename":"tournament-db.js","title":"getTeamName(teamId, schedule_key)","query":"select concat(t.category,' ',t.gender,' - ',t.country,t.number) as name from teamoptions as t\r\n\t\t\t\t\twhere t.team_id = ${con.escape(teamId)} and schedule_key=${con.escape(schedule_key)}"},{"filename":"tournament-db.js","title":"getTeamNamePublished(teamId)","query":"select concat(t.category,' ',t.gender,' - ',t.country,t.number) as name from team as t\r\n\t\t\t\t\twhere t.team_id = ${con.escape(teamId)}"},{"filename":"tournament-db.js","title":"getTeamID(teamName)","query":"select team_id from team as t\r\n\t\twhere concat(t.category,' ',t.gender,' - ',t.country,t.number) = ${con.escape(teamName)}"},{"filename":"tournament-db.js","title":"getTeamIDSpaced(teamName)","query":"select team_id from team as t\r\n\twhere concat(t.category,' ',t.gender,' - ',t.country, ' ', t.number) = ${con.escape(teamName)}"},{"filename":"tournament-db.js","title":"getGameType(gameID, schedule_key)","query":"select type as gameType from gameoptions where game_id = ${con.escape(gameID)}\r\n\t\t\t\t\tand schedule_key=${con.escape(schedule_key)}"},{"filename":"tournament-db.js","title":"getCountries()","query":"select * from country where short_name <> '' and short_name <> 'BIG' and short_name <> 'ACC' and short_name <> 'INT' "},{"filename":"tournament-db.js","title":"getLocations()","query":"select l.location_id as locationId, l.sport, l.location_name as locationName from location as l\r\n\t\t\t\t\t\t\t\twhere sport <> ''\r\n\t\t\t\t\t\t\t\torder by l.location_name asc"},{"filename":"tournament-db.js","title":"getAllTeamNotes()","query":"select * from teamnotes"},{"filename":"tournament-db.js","title":"getTeamCountryCombo()","query":"\r\n\t\tselect distinct\r\n\t\t\tcountry,\r\n\t\t\tconcat(category, ' ', gender, ' - ', country, ' ', number) as team_name from teamoptions\r\n\t\twhere team_id > 10 and category <> 'Internal';\r\n\t"},{"filename":"tournament-db.js","title":"updateTeamNotes(newNotes,teamID)","query":"update teamnotes \r\n\t\t\t\t\tset notes=${con.escape(newNotes)} \r\n\t\t\t\t\twhere name = ${con.escape(teamID)};"},{"filename":"tournament-db.js","title":"getUniqueLocations()","query":"select location_id, location_name from location  where location_name <> \"Clipboard\" group by  location_name"},{"filename":"tournament-db.js","title":"getPoolAssignments()","query":"select \r\n\t\t\t\t\t\tconcat(t.category,' ',t.gender) as category,\r\n\t\t\t\t\t\tt.sport,\r\n\t\t\t\t\t\tp.pool,\r\n\t\t\t\t\t\tconcat(tm.category,' ',tm.gender,' ',tm.country,' ',tm.number) as team \r\n\t\t\t\t\tfrom pool as p \r\n\t\t\t\t\tjoin tournament as t on p.tournament_id = t.tournament_id\r\n\t\t\t\t\tjoin team as tm on p.team_id = tm.team_id\r\n\t\t\t\t\twhere p.pool in ('Pool A','Pool B')\r\n\t\t\t\t\torder by category, t.sport, p.pool, team"},{"filename":"tournament-db.js","title":"getTournaments()","query":"\r\n\t\tcreate temporary table alltournaments\r\n\t\tselect \r\n\t\t\tt.tournament_id, \r\n\t\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament, \r\n\t\t\tcc.background, \r\n\t\t\tcc.text, \r\n\t\t\tcc.bold\r\n\t\tfrom tournament as t\r\n\t\tjoin sport as s on t.sport = s.sport\r\n\t\tjoin colorchart as cc on concat(t.category,' ',t.gender) = cc.category\r\n\t\twhere s.forfeit_score <> 0\r\n\t\torder by tournament;\r\n\t\tselect * from alltournaments;\r\n\t\tdrop table alltournaments;"},{"filename":"tournament-db.js","title":"getTournamentsColorChart()","query":"\r\n\t\tselect \r\n\t\t\tschedule_key,\r\n\t\t\tt.tournament_id as tournamentId, \r\n\t\t\tconcat(t.category,' ',t.gender) as category,\r\n\t\t\tt.sport, \r\n\t\t\tt.qual_number as qualNumber, \r\n\t\t\tconcat(t.category,' ',t.gender,if(t.sport <> '',' - ',''),t.sport) as name,\r\n\t\t\tcc.background,\r\n\t\t\tcc.text,\r\n\t\t\tcc.bold\r\n\t\tfrom tournamentoptions as t \r\n\t\tjoin sport as s on t.sport = s.sport\r\n\t\tjoin colorchart as cc on concat(t.category,' ',t.gender) = cc.category\r\n\t\twhere t.category not in ('Ch F') and s.forfeit_score <> 0\r\n\t\torder by name asc\r\n\t"},{"filename":"tournament-db.js","title":"getTournamentSAF()","query":"select t.tournament_id as tournamentId, t.category, t.gender, t.sport, t.qual_number as qualNumber, concat(t.category,' ',t.gender,if(t.sport <> '',' - ',''),t.sport) as name from tournament as t \r\n\t\t\t\t\t\t\t\twhere t.category not in ('Ch F')\r\n\t\t\t\t\t\t\t\torder by name asc"},{"filename":"tournament-db.js","title":"getGameNotes()","query":"\r\n\t\tselect game_id,\r\n\t\tschedule_key,\r\n\t\tgroup_concat(reason separator ';\\n ') as reasons\r\n\t\tfrom gameoptionschangelog\r\n\t\tjoin scheduleoptions using(schedule_key)\r\n\t\tgroup by schedule_key, game_id;\r\n\t"},{"filename":"tournament-db.js","title":"getUnassignedTeamNotes()","query":"\r\n\t\tselect \r\n\t\tschedule_key,\r\n\t\tgame_id,\r\n\t\tgroup_concat(reason separator ';\\n ') as reasons\r\n\t\tfrom (select \r\n\t\t\t\t\tschedule_key,\r\n\t\t\t\t\tgame_id,\r\n\t\t\t\t\tconcat(tn.name,': ',tn.notes) as reason\r\n\t\t\t\tfrom gameoptions as go\r\n\t\t\t\tjoin tournamentoptions as t using(tournament_id,schedule_key)\r\n\t\t\t\tjoin teamoptions as tm using(schedule_key,category,gender)\r\n\t\t\t\tjoin teamnotes as tn on tm.team_id = tn.id\r\n\t\t\t\twhere team1_id is null and tn.notes <> '') as a\r\n\t\tgroup by schedule_key, game_id;\r\n\t"},{"filename":"tournament-db.js","title":"getTeamsColorChart()","query":"\r\n\t(select distinct \r\n\t\ttor.schedule_key,\r\n\t\ttor.tournament_id, \r\n\t\tt1.team_id as teamId, \r\n\t\tconcat(t1.country,t1.number) as short,\r\n\t\tconcat(t1.category,' ',t1.gender,if(t1.country not in (''),' - ',''),t1.country,t1.number) as name,\r\n\t\ttn.notes\r\n\tfrom tournamentoptions as tor\r\n\tjoin gameoptions as g on tor.tournament_id = g.tournament_id and tor.schedule_key = g.schedule_key\r\n\tjoin teamoptions as t1 on g.team1_id = t1.team_id and g.schedule_key = t1.schedule_key\r\n\tleft join teamnotes as tn on concat(t1.category,' ',t1.gender,' - ',t1.country,' ',t1.number) = tn.name\r\n\torder by tor.tournament_id, t1.team_id)\r\n\tUNION\r\n\t(select distinct \r\n\t\ttor.schedule_key,\r\n\t\ttor.tournament_id, \r\n\t\tt2.team_id as teamId, \r\n\t\tconcat(t2.country,t2.number) as short,\r\n\t\tconcat(t2.category,' ',t2.gender,if(t2.country not in (''),' - ',''),t2.country,t2.number) as name,\r\n\t\ttn.notes\r\n\tfrom tournamentoptions as tor\r\n\tjoin gameoptions as g on tor.tournament_id = g.tournament_id and tor.schedule_key = g.schedule_key\r\n\tleft join teamoptions as t2 on g.team2_id = t2.team_id and g.schedule_key = t2.schedule_key\r\n\tjoin teamnotes as tn on concat(t2.category,' ',t2.gender,' - ',t2.country,' ',t2.number) = tn.name\r\n\torder by tor.tournament_id, t2.team_id)\r\n\torder by tournament_id, name\r\n\t"},{"filename":"tournament-db.js","title":"getMyTournaments(userId)","query":"\r\n\tcreate temporary table mytournaments\r\n\tselect distinct\r\n\t\tt.tournament_id, \r\n\t\tconcat(t.category,' ',t.gender,' - ',t.sport) as tournament \r\n\tfrom tournament as t\r\n\tjoin pool as p on t.tournament_id = p.tournament_id\r\n\tjoin sport as sp on t.sport = sp.sport\r\n\tjoin subscribe as s on p.team_id = s.team_id\r\n\twhere \r\n\t\tsp.forfeit_score <> 0 and s.username =  ${con.escape(userId)}\r\n\torder by tournament;\r\n\tselect * from mytournaments;\r\n\tdrop table mytournaments;\r\n\t"},{"filename":"tournament-db.js","title":"getSportsDB()","query":"select s.sport, forfeit_score as forfeitScore, rachmanus_max_pd as maxPd from sport as s\r\n\t\t\t\t\t\t\t\twhere s.sport not in ('dummy')\r\n\t\t\t\t\t\t\t\torder by s.sport asc"},{"filename":"tournament-db.js","title":"getTeamCoaches(teamId)","query":"select concat(u.first_name, ' ', u.last_name) as name, u.username from coach as c\r\n\t\t\t\t\tjoin user as u on c.username = u.username\r\n\t\t\t\t\twhere c.team_id = ${con.escape(teamId)}"},{"filename":"tournament-db.js","title":"getTeamSubscribers(teamId)","query":"\r\n\t\tselect u.username, concat(u.first_name,' ',u.last_name) as name from subscribe as s\r\n\t\tjoin user as u on s.username = u.username\r\n\t\tleft join coach as c on s.username = c.username and s.team_id = c.team_id\r\n\t\twhere c.username is null and s.team_id = ${con.escape(teamId)}"},{"filename":"tournament-db.js","title":"getCombinationsDB()","query":"\r\n\t\tselect distinct \r\n\t\t\tcountry,\r\n\t\t\tcategory,\r\n\t\t\tgender,\r\n\t\t\tsecond.pre,\r\n\t\t\tnum,\r\n\t\t\tif(third.pre is null,0,1) as unassigned \r\n\t\tfrom\r\n\t\t(select distinct\r\n\t\t\tr.country,\r\n\t\t\tt.category,\r\n\t\t\tt.gender\r\n\t\tfrom registrants as r\r\n\t\tleft join tournamentoptions as t\r\n\t\ton concat(t.category, ' ', t.gender)=r.category_gender\r\n\t\twhere country not in ('', 'INT') and category is not null\r\n\t\torder by country, category, gender) as first\r\n\t\tjoin \r\n\t\t(select left(name, length(name) - 2) as pre, max(right(name,1)) as num\r\n\t\tfrom teamnotes\r\n\t\tgroup by pre\r\n\t\torder by num desc) as second on concat(category,' ',gender,' - ',country) = second.pre\r\n\t\tleft join \r\n\t\t(select concat(category_gender,' - ',country) as pre from registrants\r\n\t\twhere team is null and is_registered = 1) as third on second.pre = third.pre;\r\n\t"},{"filename":"tournament-db.js","title":"getCombinationsForCaptain(username)","query":"\r\n\t\tselect distinct\r\n\t\t\tcountry,\r\n\t\t\tcategory,\r\n\t\t\tgender,\r\n\t\t\tleft(tn.name, length(tn.name) - 2) as pre,\r\n\t\t\tif(third.pre is null,0,1) as unassigned \r\n\t\tfrom teamnotes as tn\r\n\t\tjoin teamoptions as tmo on concat(tmo.category,' ',tmo.gender,' - ',tmo.country) = left(tn.name, length(tn.name) - 2)\r\n\t\tjoin captain as ca using(country)\r\n\t\tleft join \r\n\t\t(select concat(category_gender,' - ',country) as pre from registrants\r\n\t\twhere team is null and is_registered = 1) as third on left(tn.name, length(tn.name) - 2) = third.pre\r\n\t\twhere ca.username = ${con.escape(username)}\r\n\t\torder by pre;\r\n\t"},{"filename":"tournament-db.js","title":"getCaptainTeams(username)","query":"\r\n\t\tselect distinct \r\n\t\t\tcountry, \r\n\t\t\tcategory, \r\n\t\t\tgender, \r\n\t\t\ttn.name\r\n\t\tfrom teamnotes as tn\r\n\t\tjoin teamoptions as tmo\r\n\t\ton concat(tmo.category,' ',tmo.gender,' - ',tmo.country) = left(tn.name, length(tn.name) - 2)\r\n\t\tjoin captain as ca using(country)\r\n\t\twhere ca.username = ${con.escape(username)}\r\n\t\torder by name\r\n\t"},{"filename":"tournament-db.js","title":"getPlayersDB(catGender, country)","query":"\r\n\tselect \r\n\t\tr.registrant_id, \r\n\t\tconcat(r.firstname,' ',r.lastname, ' (', left(r.gender, 1), ' - ', r.grade, ')') as name, \r\n\t\tr.category_gender, \r\n\t\tr.country,\r\n\t\tr.grade,\r\n\t\tr.gender,\r\n\t\tr.team as team_id,\r\n\t\tconcat(t.category, ' ', t.gender, ' ', t.country, ' ', t.number) as teamname \r\n\tfrom registrants as r\r\n\tleft join team as t\r\n\ton r.team=concat(t.category,' ',t.gender,' ',t.country,t.number)\r\n\twhere r.is_registered = 1\r\n\tand r.category_gender = ${con.escape(catGender)}\r\n\tand r.country = ${con.escape(country)}\r\n\torder by r.grade, r.gender, r.lastname, r.firstname;"},{"filename":"tournament-db.js","title":"assignPlayerDB(registrant_id, teamId, username)","query":"update registrants\r\n\t\t\t\t\tset team = ${con.escape(teamId)},\r\n\t\t\t\t\tupdated_by = ${con.escape(username)}\r\n\t\t\t\t\twhere registrant_id = ${con.escape(registrant_id)};"},{"filename":"tournament-db.js","title":"unassignPlayerDB(registrant_id, username)","query":"update registrants\r\n\t\t\t\t\tset team = null,\r\n\t\t\t\t\tupdated_by = ${con.escape(username)}\r\n\t\t\t\t\twhere registrant_id = ${con.escape(registrant_id)};"},{"filename":"tournament-db.js","title":"unassignAllDB(catGender, country, username)","query":"update registrants\r\n\tset team = null,\r\n\tupdated_by = ${con.escape(username)}\r\n\twhere category_gender = ${con.escape(catGender)} and\r\n\tcountry = ${con.escape(country)};"},{"filename":"tournament-db.js","title":"getAllEventInfo()","query":"\r\n\tSELECT distinct category, gender FROM tournament;\r\n\tSELECT \r\n\t\tevent_id,\r\n\t\ttitle,\r\n\t\tdate,\r\n\t\ttime,\r\n\t\tlocation,\r\n\t\tduration,\r\n\t\tdate_format(date, '%a, %b-%d') as displayDate\r\n\tFROM eventsetup order by title;\r\n\tSELECT event_id, category, gender from eventparticipation;\r\n\tselect e.event_id, e.username, concat(u.first_name, ' ', u.last_name) as name\r\n\tfrom eventcoordinator as e\r\n\tjoin user as u on e.username = u.username"},{"filename":"tournament-db.js","title":"getEventInfo(id)","query":"SELECT * FROM eventsetup where event_id = ${con.escape(id)};\r\n\tSELECT event_id, category, gender from eventparticipation where event_id = ${con.escape(id)};\r\n\tselect e.event_id, e.username, concat(u.first_name, ' ', u.last_name) as name\r\n\tfrom eventcoordinator as e  \r\n\tjoin user as u on e.username = u.username where e.event_id = ${con.escape(id)}"},{"filename":"tournament-db.js","title":"deleteEventFunc(id)","query":"delete from eventsetup where event_id = ${con.escape(id)}"},{"filename":"tournament-db.js","title":"getCoordinatorEvents(username)","query":"select \r\n                        e.event_id,\r\n                        e.title,\r\n                        date_format(e.date, '%a, %b %d') as date,\r\n                        date_format(e.time, '%l:%i %p') as time,\r\n                        e.location,\r\n                        concat(e.duration, ' minutes') as duration,\r\n                        c.username\r\n                    from eventsetup as e\r\n                    join eventcoordinator as c on e.event_id = c.event_id\r\n                    where c.username = ${con.escape(username)}\r\n\t\t\t\t\tgroup by title"},{"filename":"tournament-db.js","title":"getAllEvents(username)","query":"select \r\n                        e.event_id,\r\n                        e.title,\r\n                        date_format(e.date, '%a, %b %d') as date,\r\n                        date_format(e.time, '%l:%i %p') as time,\r\n                        e.location,\r\n                        concat(e.duration, ' minutes') as duration,\r\n                        ${con.escape(username)} as username\r\n                    from eventsetup as e\r\n\t\t\t\t\tgroup by title"},{"filename":"tournament-db.js","title":"getPointsByEvent(event_id, username, is_admin)","query":"select\r\n                        points_id,\r\n                        event_id,\r\n                        country,\r\n                        if (awardee_type=1, awardee, '') as awardee,\r\n                        points_description,\r\n                        if (color=1, 'Silver', 'Gold') as medal_type,\r\n                        if (username=${con.escape(username)} or ${is_admin}, 1,0) as canDelete\r\n                    from individualmedal\r\n                    where event_id = ${con.escape(event_id)}\r\n                    order by points_id desc"},{"filename":"tournament-db.js","title":"addPointsToEvent(body)","query":"insert into individualmedal values (\r\n        0,\r\n        ${con.escape(body.event_id)},\r\n        ${con.escape(body.short_name)},\r\n        ${con.escape(body.awardee_type)},\r\n        ${con.escape(body.awardee)},\r\n        ${con.escape(body.points_description)},\r\n        ${con.escape(body.num_points)},\r\n        ${con.escape(body.username)}\r\n    )"},{"filename":"tournament-db.js","title":"deletePointsFromEvent(points_id, username)","query":"delete from individualmedal\r\n                    where username=${con.escape(username)} and points_id=${points_id}"},{"filename":"tournament-db.js","title":"getColorChartScores()","query":"\r\n\t\tselect \r\n\t\t\tschedule_key, \r\n\t\t\tgame_id, \r\n\t\t\tconcat(score1,' - ',score2) as score,\r\n\t\t\tconcat(team1_set1,' - ',team2_set1) as set1,\r\n\t\t\tconcat(team1_set2,' - ',team2_set2) as set2,\r\n\t\t\tconcat(team1_set3,' - ',team2_set3) as set3\r\n\t\tfrom sign as s\r\n\t\tjoin gameoptions as go using(game_id)\r\n\t\tjoin scheduleoptions as so using(schedule_key)\r\n\t\tleft join setscore as ss using(game_id)\r\n\t\twhere published = 1;\r\n\t"},{"filename":"tournament-db.js","title":"createEventFunc(title, location, date, startTime, duration, coords, categories)","query":" async function createEventFunc(title, location, date, startTime, duration, coords, categories) {\r\n\tlet query = `insert into eventsetup values (0, ${con.escape(title)}, ${con.escape(date)}, ${con.escape(startTime)}, ${con.escape(location)}, ${con.escape(duration)});\r\n\tset @eventID = (SELECT LAST_INSERT_ID());`\r\n\r\n\tcategories.forEach(obj => {query = query.concat(`insert into eventparticipation values(@eventID, ${con.escape(obj.category)}, ${con.escape(obj.gender)});`)})\r\n\tcoords.forEach(obj => {query = query.concat(`insert into eventcoordinator values(@eventID, ${con.escape(obj.id)});`)})\r\n\tconst finalQuery = query;\r\n\r\n\treturn await dbQuery(finalQuery);\r\n}\r\n\r\n// @query\r\n"},{"filename":"tournament-db.js","title":"updateEventFunc(id, changes, newCoords, removedCoords, newCats, removedCats)","query":" async function updateEventFunc(id, changes, newCoords, removedCoords, newCats, removedCats) {\r\n\tlet query = '';\r\n\tif (changes.length > 0){\r\n\t\tquery = query.concat(`UPDATE eventsetup set `);\r\n\t\tfor(let i = 0; i < changes.length; i++)\r\n\t\t{\r\n\t\t\ti === changes.length - 1 ? query = query.concat(changes[i].type, ` = ${con.escape(changes[i].new)} `) : query = query.concat(changes[i].type,` = ${con.escape(changes[i].new)}, `);\r\n\t\t}\r\n\t\tquery = query.concat(`WHERE event_id = ${con.escape(id)};`);\r\n\t}\r\n\r\n\tnewCoords.forEach(obj => {query = query.concat(`INSERT into eventcoordinator values(${con.escape(id)}, ${con.escape(obj.id)});`)})\r\n\tremovedCoords.forEach(obj => {query = query.concat(`DELETE from eventcoordinator WHERE event_id = ${con.escape(id)} AND username = ${con.escape(obj.id)};`)})\r\n\r\n\tnewCats.forEach(obj => {query = query.concat(`INSERT into eventparticipation values(${con.escape(id)}, ${con.escape(obj.category)}, ${con.escape(obj.gender)});`)})\r\n\tremovedCats.forEach(obj => {query = query.concat(`DELETE from eventparticipation WHERE event_id = ${con.escape(id)} AND category = ${con.escape(obj.category)} AND gender =  ${con.escape(obj.gender)};`)})\r\n\r\n\tconst finalQuery = query;\r\n\t\r\n\tif (finalQuery !== '')\r\n\t\treturn await dbQuery(finalQuery);\r\n\telse\r\n\t\treturn 'Query was empty';\r\n}\r\n\r\n// @query\r\n"},{"filename":"tournament-db.js","title":"assignBroadcast(body, teamid)","query":" async function assignBroadcast(body, teamid) { //checked 2019-06-05\r\n\tconst content = `Congratulations! You have been assigned to ${body.tournamentName} ${body.type} on ${body.date} at ${body.time} on ${body.location}`;\r\n\tconst query = `insert into post\r\n\t\t\t\t\t\t\t\tselect 0,concat(t.category,' ',t.gender,' - ',t.country,t.number),'${content}',t.team_id,'teamassignment',current_timestamp, sha1(concat(concat(t.category,' ',t.gender,' - ',t.country,t.number),'${content}',current_timestamp)), 1 from team as t\r\n\t\t\t\t\t\t\t\twhere t.team_id = ${con.escape(teamid)};`;\r\n\r\n\treturn await dbQuery(query);\r\n}\r\n\r\n// @query\r\n"},{"filename":"user-db.js","title":"getPotentialCaptains()","query":"\r\n\t\tselect u.username, concat(u.first_name,' ',u.last_name) as name\r\n\t\tfrom user as u\r\n\t\tleft join captain as c on u.username=c.username\r\n\t\twhere c.country is null;\r\n\t"},{"filename":"user-db.js","title":"getCaptains()","query":"\r\n\t\tselect u.username, concat(u.first_name,' ',u.last_name) as name, c.country\r\n\t\tfrom captain as c\r\n\t\tleft join user as u\r\n\t\ton c.username = u.username\r\n\t"},{"filename":"user-db.js","title":"addToCaptainTable(username, country)","query":"insert into captain\r\n\t\t\t\t\tselect ${con.escape(username)}, ${con.escape(country)}"},{"filename":"user-db.js","title":"removeFromCaptainTable(username, country)","query":"delete from captain\r\n\t\t\t\t\twhere username = ${con.escape(username)} and country = ${con.escape(country)}"},{"filename":"user-db.js","title":"getCoaches(team)","query":"\r\n\t\tselect username, concat(first_name,' ',last_name) as name from coach as c\r\n\t\tjoin teamnotes as tn on c.team_id = tn.id\r\n\t\tjoin user as u using(username)\r\n\t\twhere tn.name = ${con.escape(team)}\r\n\t\torder by name;\r\n\t"},{"filename":"user-db.js","title":"addSportForRef(username, sport)","query":"\r\n\t\tinsert into referee values (${con.escape(username)}, ${con.escape(sport)});\r\n\t"},{"filename":"user-db.js","title":"removeSportForRef(username, sport)","query":"\r\n\t\tdelete from referee where username=${con.escape(username)} and sport=${con.escape(sport)}\r\n\t"},{"filename":"user-db.js","title":"getSports()","query":"\r\n\t\tselect sport from sport where forfeit_score <> 0\r\n\t"},{"filename":"user-db.js","title":"getRefSports()","query":"\r\n\t\tselect username, sport from referee\r\n\t"},{"filename":"user-db.js","title":"getPotentialCoaches(team)","query":"\r\n\t\tselect u.username, concat(u.first_name,' ',u.last_name) as name from subscribe as s\r\n\t\tjoin teamnotes as tn on s.team_id = tn.id\r\n\t\tjoin user as u on s.username = u.username\r\n\t\tleft join coach as c on s.username = c.username and s.team_id = c.team_id\r\n\t\twhere c.username is null and tn.name = ${con.escape(team)}\r\n\t\torder by name;\r\n\t"},{"filename":"user-db.js","title":"addToCoachTable(username, team)","query":"\r\n\t\tinsert into coach\r\n\t\tselect ${con.escape(username)}, id\r\n\t\tfrom teamnotes where name = ${con.escape(team)}\r\n\t"},{"filename":"user-db.js","title":"addCoachToInternalChannel(username)","query":"\r\n\t\tinsert into subscribe (username,team_id) values (${con.escape(username)},2)\r\n\t\ton duplicate key update username = ${con.escape(username)};\r\n\t"},{"filename":"user-db.js","title":"isUserStillCoach(username)","query":"\r\n\t\tselect count(*) as is_still_coach from coach where username=${con.escape(username)}\r\n\t"},{"filename":"user-db.js","title":"removeFromCoachTable(username, team)","query":"\r\n\t\tdelete from coach\r\n\t\twhere username = ${con.escape(username)}\r\n\t\tand team_id = (select id from teamnotes where name = ${con.escape(team)})"},{"filename":"user-db.js","title":"getAllUsersDB()","query":"'select username, first_name, last_name, user_type from user'\r\n\t\treturn await dbQuery(query)\r\n\t}catch(e) {\r\n\t\tconsole.log(\"Error!\", e)\r\n\t}\r\n}\r\n\r\n// "},{"filename":"user-db.js","title":"getFilteredUsersDB(userType)","query":"\r\n\t\tselect username, first_name, last_name, user_type from user\r\n\t\twhere user_type= ${con.escape(userType)}\r\n\t\t"},{"filename":"user-db.js","title":"addFCM(userId, token)","query":"REPLACE INTO notify (fcm_token,username) VALUES ( ${con.escape(token)} , ${con.escape(userId)});"},{"filename":"user-db.js","title":"removeFCM(userId)","query":"REPLACE INTO notify (fcm_token, username) values ('', ${con.escape(userId)});"},{"filename":"user-db.js","title":"getMyNewsfeedPt1(userId)","query":"\r\n\t\tselect distinct\r\n\t\t\tp.title,\r\n\t\t\tp.post,\r\n\t\t\tu.username,\r\n\t\t\tu.first_name,\r\n\t\t\tu.last_name,\r\n\t\t\tposter_username,\r\n\t\t\tp.time_stamp,\r\n\t\t\tp.comments_allowed,\r\n\t\t\tp.social_hash_id,\r\n\t\t\tcount(l.username) as total_likes,\r\n\t\t\texists(\r\n\t\t\t\tselect *\r\n\t\t\t\tfrom likes as l\r\n\t\t\t\twhere l.username = ${con.escape(userId)} \r\n\t\t\t\t\tand l.social_hash_id = p.social_hash_id\r\n\t\t\t\t) as liked from post as p\r\n\t\tjoin subscribe as s on s.team_id = p.team_id\r\n\t\tjoin user as u on u.username = p.poster_username\r\n\t\tjoin lastvisits as lv on s.username = lv.username\r\n\t\tleft join likes as l on l.social_hash_id = p.social_hash_id\r\n\t\twhere s.username = ${con.escape(userId)} and p.time_stamp > lv.newsfeed\r\n\t\tgroup by p.post_id\r\n\t\torder by p.time_stamp desc\r\n\t"},{"filename":"user-db.js","title":"getMyNewsfeedPt2(userId)","query":"\r\n\t\tselect distinct\r\n\t\t\tc.comment_id,\r\n\t\t\tp.social_hash_id,\r\n\t\t\tconcat(u.first_name,' ',u.last_name) as poster,\r\n\t\t\tc.time_stamp,\r\n\t\t\tc.comment,\r\n\t\t\tc.comment_id\r\n\t\tfrom post as p\r\n\t\tjoin comment as c on c.social_hash_id = p.social_hash_id\r\n\t\tleft join badcomments as bc on c.comment_id = bc.comment_id\r\n\t\tjoin user as u on u.username = c.poster_username\r\n\t\tjoin lastvisits as lv on u.username = lv.username\r\n\t\tjoin subscribe as s on s.team_id = p.team_id\r\n\t\twhere s.username = ${con.escape(userId)}\r\n\t\t\tand bc.comment_id is null\r\n\t\t\tand p.time_stamp > lv.newsfeed\r\n\t\torder by c.time_stamp desc;\r\n\t"},{"filename":"user-db.js","title":"getMyRecentScores(userId)","query":"\r\n\t\tselect\r\n\t\t\tg.game_id,\r\n\t\t\tconcat(t0.category,' ',t0.gender,' - ',t0.sport) as tournament,\r\n\t\t\tdate_format(g.date, '%W, %m/%d') as date,\r\n\t\t\tdate_format(g.time, '%h:%i %p') as time,\r\n\t\t\tg.location,\r\n\t\t\tconcat(t1.country, ' ', t1.number) as short1,\r\n\t\t\tconcat(t2.country,' ' , t2.number) as short2,\r\n\t\t\tt1.country as flag1,\r\n\t\t\tt2.country as flag2,\r\n\t\t\tconcat(s.score1,' - ',s.score2) as score,\r\n\t\t\tif(ss.game_id,1,0) as hasSet,\r\n\t\t\tconcat(ss.team1_set1,' - ',ss.team2_set1) as set1,\r\n\t\t\tconcat(ss.team1_set2,' - ',ss.team2_set2) as set2,\r\n\t\t\tconcat(ss.team1_set3,' - ',ss.team2_set3) as set3,\r\n\t\t\tt0.sport,\r\n\t\t\tg.type,\r\n\t\t\tif(current_timestamp < date_add(timestamp(g.date,g.time),interval 2 hour),TRUE,FALSE) as showReport,\r\n\t\t\tt0.tournament_id,\r\n\t\t\tmytm.team_id\r\n\t\tfrom sign as s\r\n\t\tjoin game as g on s.game_id = g.game_id\r\n\t\tjoin tournament as t0 on g.tournament_id = t0.tournament_id\r\n\t\tjoin team as t1 on g.team1_id = t1.team_id\r\n\t\tjoin team as t2 on g.team2_id = t2.team_id\r\n\t\tjoin subscribe as sub on t1.team_id = sub.team_id or t2.team_id = sub.team_id\r\n\t\tjoin lastvisits as lv using(username)\r\n\t\tjoin team as mytm on sub.team_id=mytm.team_id\r\n\t\tleft join setscore as ss on g.game_id = ss.game_id\r\n\t\twhere sub.username = ${con.escape(userId)} and s.timestamp > lv.scores\r\n\t\torder by mytm.team_id asc, g.date desc, g.time desc;\r\n\t"},{"filename":"user-db.js","title":"updateLastVisitAll(userId)","query":"\r\n\t\tupdate lastvisits\r\n\t\tset scores = current_timestamp(),\r\n\t\t\tnewsfeed = current_timestamp(),\r\n\t\t\tschedulechanges = current_timestamp()\r\n\t\twhere username = ${con.escape(userId)};\r\n\t"},{"filename":"user-db.js","title":"updateLastVisitScores(userId)","query":"\r\n\t\tupdate lastvisits\r\n\t\tset scores = current_timestamp()\r\n\t\twhere username = ${con.escape(userId)};\r\n\t"},{"filename":"user-db.js","title":"updateLastVisitScheduleChanges(userId)","query":"\r\n\t\tupdate lastvisits\r\n\t\tset schedulechanges = current_timestamp()\r\n\t\twhere username = ${con.escape(userId)};\r\n\t"},{"filename":"user-db.js","title":"registrantChanges()","query":"\r\n\t\tselect * from (\r\n\t\t\tselect \r\n\t\t\t\tr.registrant_id,\r\n\t\t\t\tr.mg_registrant_id as id,\r\n\t\t\t\tconcat(r.firstname,' ',r.lastname) as name,\r\n\t\t\t\tr.country,\r\n\t\t\t\tr.gender,\r\n\t\t\t\tr.grade,\r\n\t\t\t\tr.category_gender,\r\n\t\t\t\tr.team,\r\n\t\t\t\tif(r.is_registered=1,'Yes','No') as registered,\r\n\t\t\t\tcurrent_timestamp() as timestamp,\r\n\t\t\t\tdate_format(date_add(current_timestamp(),interval -5 hour),'%a, %b-%d %l:%i %p') as change_made,\t\t\t\t\r\n\t\t\t\tconcat(u.first_name,' ',u.last_name) as updated_by,\r\n\t\t\t\t9999999 as change_id\r\n\t\t\tfrom registrants as r\r\n\t\t\tjoin user as u on r.updated_by = u.username\r\n\t\t\tunion\r\n\t\t\tselect \r\n\t\t\t\trcl.registrant_id,\r\n\t\t\t\tr.mg_registrant_id as id,\r\n\t\t\t\tconcat(rcl.firstname,' ',rcl.lastname) as name,\r\n\t\t\t\trcl.country,\r\n\t\t\t\trcl.gender,\r\n\t\t\t\trcl.grade,\r\n\t\t\t\trcl.category_gender,\r\n\t\t\t\trcl.team,\r\n\t\t\t\tif(rcl.is_registered=1,'Yes','No') as registered,\r\n\t\t\t\ttimestamp,\r\n\t\t\t\tdate_format(date_add(timestamp,interval -5 hour),'%a, %b-%d %l:%i %p') as change_made,\r\n\t\t\t\tconcat(u.first_name,' ',u.last_name) as updated_by,\r\n\t\t\t\trcl.change_id\r\n\t\t\tfrom registrants_change_log as rcl\r\n\t\t\tjoin registrants as r using(registrant_id)\r\n\t\t\tleft join user as u on rcl.updated_by = u.username\r\n\t\t) as internal\r\n\t\twhere registrant_id in (select distinct registrant_id from registrants_change_log)\r\n\t\tand timestamp >= '2021-10-25'\r\n\t\torder by registrant_id, change_id desc;\r\n\t"}]